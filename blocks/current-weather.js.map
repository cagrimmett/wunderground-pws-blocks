{"mappings":"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","sources":["node_modules/memize/index.js","node_modules/sprintf-js/src/sprintf.js","node_modules/@wordpress/i18n/build-module/@wordpress/i18n/src/sprintf.js","node_modules/@tannin/postfix/index.js","node_modules/@tannin/evaluate/index.js","node_modules/@tannin/compile/index.js","node_modules/tannin/index.js","node_modules/@tannin/plural-forms/index.js","node_modules/@wordpress/i18n/build-module/@wordpress/i18n/src/create-i18n.js","node_modules/@wordpress/hooks/build-module/@wordpress/hooks/src/validateNamespace.js","node_modules/@wordpress/hooks/build-module/@wordpress/hooks/src/validateHookName.js","node_modules/@wordpress/hooks/build-module/@wordpress/hooks/src/createAddHook.js","node_modules/@wordpress/hooks/build-module/@wordpress/hooks/src/createRemoveHook.js","node_modules/@wordpress/hooks/build-module/@wordpress/hooks/src/createHasHook.js","node_modules/@wordpress/hooks/build-module/@wordpress/hooks/src/createRunHook.js","node_modules/@wordpress/hooks/build-module/@wordpress/hooks/src/createCurrentHook.js","node_modules/@wordpress/hooks/build-module/@wordpress/hooks/src/createDoingHook.js","node_modules/@wordpress/hooks/build-module/@wordpress/hooks/src/createDidHook.js","node_modules/@wordpress/hooks/build-module/@wordpress/hooks/src/createHooks.js","node_modules/@wordpress/hooks/build-module/@wordpress/hooks/src/index.js","node_modules/@wordpress/i18n/build-module/@wordpress/i18n/src/default-i18n.js","node_modules/@wordpress/api-fetch/build-module/middlewares/@wordpress/api-fetch/src/middlewares/nonce.js","node_modules/@wordpress/api-fetch/build-module/middlewares/@wordpress/api-fetch/src/middlewares/namespace-endpoint.js","node_modules/@wordpress/api-fetch/build-module/middlewares/@wordpress/api-fetch/src/middlewares/root-url.js","node_modules/@wordpress/url/build-module/@wordpress/url/src/safe-decode-uri-component.js","node_modules/@wordpress/url/build-module/@wordpress/url/src/get-query-string.js","node_modules/@wordpress/url/build-module/@wordpress/url/src/get-query-args.js","node_modules/@wordpress/url/build-module/@wordpress/url/src/build-query-string.js","node_modules/@wordpress/url/build-module/@wordpress/url/src/add-query-args.js","node_modules/@wordpress/url/build-module/@wordpress/url/src/normalize-path.js","node_modules/@wordpress/api-fetch/build-module/middlewares/@wordpress/api-fetch/src/middlewares/preloading.js","node_modules/@wordpress/api-fetch/build-module/middlewares/@wordpress/api-fetch/src/middlewares/fetch-all-middleware.js","node_modules/@wordpress/api-fetch/build-module/middlewares/@wordpress/api-fetch/src/middlewares/http-v1.js","node_modules/@wordpress/url/build-module/@wordpress/url/src/get-query-arg.js","node_modules/@wordpress/url/build-module/@wordpress/url/src/has-query-arg.js","node_modules/@wordpress/api-fetch/build-module/utils/@wordpress/api-fetch/src/utils/response.js","node_modules/@wordpress/api-fetch/build-module/middlewares/@wordpress/api-fetch/src/middlewares/media-upload.js","node_modules/@wordpress/api-fetch/build-module/@wordpress/api-fetch/src/index.js","node_modules/@wordpress/api-fetch/build-module/middlewares/@wordpress/api-fetch/src/middlewares/user-locale.js","blocks/current-weather.jsx"],"sourcesContent":["/**\n * Memize options object.\n *\n * @typedef MemizeOptions\n *\n * @property {number} [maxSize] Maximum size of the cache.\n */\n\n/**\n * Internal cache entry.\n *\n * @typedef MemizeCacheNode\n *\n * @property {?MemizeCacheNode|undefined} [prev] Previous node.\n * @property {?MemizeCacheNode|undefined} [next] Next node.\n * @property {Array<*>}                   args   Function arguments for cache\n *                                               entry.\n * @property {*}                          val    Function result.\n */\n\n/**\n * Properties of the enhanced function for controlling cache.\n *\n * @typedef MemizeMemoizedFunction\n *\n * @property {()=>void} clear Clear the cache.\n */\n\n/**\n * Accepts a function to be memoized, and returns a new memoized function, with\n * optional options.\n *\n * @template {Function} F\n *\n * @param {F}             fn        Function to memoize.\n * @param {MemizeOptions} [options] Options object.\n *\n * @return {F & MemizeMemoizedFunction} Memoized function.\n */\nfunction memize( fn, options ) {\n\tvar size = 0;\n\n\t/** @type {?MemizeCacheNode|undefined} */\n\tvar head;\n\n\t/** @type {?MemizeCacheNode|undefined} */\n\tvar tail;\n\n\toptions = options || {};\n\n\tfunction memoized( /* ...args */ ) {\n\t\tvar node = head,\n\t\t\tlen = arguments.length,\n\t\t\targs, i;\n\n\t\tsearchCache: while ( node ) {\n\t\t\t// Perform a shallow equality test to confirm that whether the node\n\t\t\t// under test is a candidate for the arguments passed. Two arrays\n\t\t\t// are shallowly equal if their length matches and each entry is\n\t\t\t// strictly equal between the two sets. Avoid abstracting to a\n\t\t\t// function which could incur an arguments leaking deoptimization.\n\n\t\t\t// Check whether node arguments match arguments length\n\t\t\tif ( node.args.length !== arguments.length ) {\n\t\t\t\tnode = node.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Check whether node arguments match arguments values\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tif ( node.args[ i ] !== arguments[ i ] ) {\n\t\t\t\t\tnode = node.next;\n\t\t\t\t\tcontinue searchCache;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// At this point we can assume we've found a match\n\n\t\t\t// Surface matched node to head if not already\n\t\t\tif ( node !== head ) {\n\t\t\t\t// As tail, shift to previous. Must only shift if not also\n\t\t\t\t// head, since if both head and tail, there is no previous.\n\t\t\t\tif ( node === tail ) {\n\t\t\t\t\ttail = node.prev;\n\t\t\t\t}\n\n\t\t\t\t// Adjust siblings to point to each other. If node was tail,\n\t\t\t\t// this also handles new tail's empty `next` assignment.\n\t\t\t\t/** @type {MemizeCacheNode} */ ( node.prev ).next = node.next;\n\t\t\t\tif ( node.next ) {\n\t\t\t\t\tnode.next.prev = node.prev;\n\t\t\t\t}\n\n\t\t\t\tnode.next = head;\n\t\t\t\tnode.prev = null;\n\t\t\t\t/** @type {MemizeCacheNode} */ ( head ).prev = node;\n\t\t\t\thead = node;\n\t\t\t}\n\n\t\t\t// Return immediately\n\t\t\treturn node.val;\n\t\t}\n\n\t\t// No cached value found. Continue to insertion phase:\n\n\t\t// Create a copy of arguments (avoid leaking deoptimization)\n\t\targs = new Array( len );\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\n\t\tnode = {\n\t\t\targs: args,\n\n\t\t\t// Generate the result from original function\n\t\t\tval: fn.apply( null, args ),\n\t\t};\n\n\t\t// Don't need to check whether node is already head, since it would\n\t\t// have been returned above already if it was\n\n\t\t// Shift existing head down list\n\t\tif ( head ) {\n\t\t\thead.prev = node;\n\t\t\tnode.next = head;\n\t\t} else {\n\t\t\t// If no head, follows that there's no tail (at initial or reset)\n\t\t\ttail = node;\n\t\t}\n\n\t\t// Trim tail if we're reached max size and are pending cache insertion\n\t\tif ( size === /** @type {MemizeOptions} */ ( options ).maxSize ) {\n\t\t\ttail = /** @type {MemizeCacheNode} */ ( tail ).prev;\n\t\t\t/** @type {MemizeCacheNode} */ ( tail ).next = null;\n\t\t} else {\n\t\t\tsize++;\n\t\t}\n\n\t\thead = node;\n\n\t\treturn node.val;\n\t}\n\n\tmemoized.clear = function() {\n\t\thead = null;\n\t\ttail = null;\n\t\tsize = 0;\n\t};\n\n\tif ( process.env.NODE_ENV === 'test' ) {\n\t\t// Cache is not exposed in the public API, but used in tests to ensure\n\t\t// expected list progression\n\t\tmemoized.getCache = function() {\n\t\t\treturn [ head, tail, size ];\n\t\t};\n\t}\n\n\t// Ignore reason: There's not a clear solution to create an intersection of\n\t// the function with additional properties, where the goal is to retain the\n\t// function signature of the incoming argument and add control properties\n\t// on the return value.\n\n\t// @ts-ignore\n\treturn memoized;\n}\n\nmodule.exports = memize;\n","/* global window, exports, define */\n\n!function() {\n    'use strict'\n\n    var re = {\n        not_string: /[^s]/,\n        not_bool: /[^t]/,\n        not_type: /[^T]/,\n        not_primitive: /[^v]/,\n        number: /[diefg]/,\n        numeric_arg: /[bcdiefguxX]/,\n        json: /[j]/,\n        not_json: /[^j]/,\n        text: /^[^\\x25]+/,\n        modulo: /^\\x25{2}/,\n        placeholder: /^\\x25(?:([1-9]\\d*)\\$|\\(([^)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-gijostTuvxX])/,\n        key: /^([a-z_][a-z_\\d]*)/i,\n        key_access: /^\\.([a-z_][a-z_\\d]*)/i,\n        index_access: /^\\[(\\d+)\\]/,\n        sign: /^[+-]/\n    }\n\n    function sprintf(key) {\n        // `arguments` is not an array, but should be fine for this call\n        return sprintf_format(sprintf_parse(key), arguments)\n    }\n\n    function vsprintf(fmt, argv) {\n        return sprintf.apply(null, [fmt].concat(argv || []))\n    }\n\n    function sprintf_format(parse_tree, argv) {\n        var cursor = 1, tree_length = parse_tree.length, arg, output = '', i, k, ph, pad, pad_character, pad_length, is_positive, sign\n        for (i = 0; i < tree_length; i++) {\n            if (typeof parse_tree[i] === 'string') {\n                output += parse_tree[i]\n            }\n            else if (typeof parse_tree[i] === 'object') {\n                ph = parse_tree[i] // convenience purposes only\n                if (ph.keys) { // keyword argument\n                    arg = argv[cursor]\n                    for (k = 0; k < ph.keys.length; k++) {\n                        if (arg == undefined) {\n                            throw new Error(sprintf('[sprintf] Cannot access property \"%s\" of undefined value \"%s\"', ph.keys[k], ph.keys[k-1]))\n                        }\n                        arg = arg[ph.keys[k]]\n                    }\n                }\n                else if (ph.param_no) { // positional argument (explicit)\n                    arg = argv[ph.param_no]\n                }\n                else { // positional argument (implicit)\n                    arg = argv[cursor++]\n                }\n\n                if (re.not_type.test(ph.type) && re.not_primitive.test(ph.type) && arg instanceof Function) {\n                    arg = arg()\n                }\n\n                if (re.numeric_arg.test(ph.type) && (typeof arg !== 'number' && isNaN(arg))) {\n                    throw new TypeError(sprintf('[sprintf] expecting number but found %T', arg))\n                }\n\n                if (re.number.test(ph.type)) {\n                    is_positive = arg >= 0\n                }\n\n                switch (ph.type) {\n                    case 'b':\n                        arg = parseInt(arg, 10).toString(2)\n                        break\n                    case 'c':\n                        arg = String.fromCharCode(parseInt(arg, 10))\n                        break\n                    case 'd':\n                    case 'i':\n                        arg = parseInt(arg, 10)\n                        break\n                    case 'j':\n                        arg = JSON.stringify(arg, null, ph.width ? parseInt(ph.width) : 0)\n                        break\n                    case 'e':\n                        arg = ph.precision ? parseFloat(arg).toExponential(ph.precision) : parseFloat(arg).toExponential()\n                        break\n                    case 'f':\n                        arg = ph.precision ? parseFloat(arg).toFixed(ph.precision) : parseFloat(arg)\n                        break\n                    case 'g':\n                        arg = ph.precision ? String(Number(arg.toPrecision(ph.precision))) : parseFloat(arg)\n                        break\n                    case 'o':\n                        arg = (parseInt(arg, 10) >>> 0).toString(8)\n                        break\n                    case 's':\n                        arg = String(arg)\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 't':\n                        arg = String(!!arg)\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'T':\n                        arg = Object.prototype.toString.call(arg).slice(8, -1).toLowerCase()\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'u':\n                        arg = parseInt(arg, 10) >>> 0\n                        break\n                    case 'v':\n                        arg = arg.valueOf()\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'x':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16)\n                        break\n                    case 'X':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16).toUpperCase()\n                        break\n                }\n                if (re.json.test(ph.type)) {\n                    output += arg\n                }\n                else {\n                    if (re.number.test(ph.type) && (!is_positive || ph.sign)) {\n                        sign = is_positive ? '+' : '-'\n                        arg = arg.toString().replace(re.sign, '')\n                    }\n                    else {\n                        sign = ''\n                    }\n                    pad_character = ph.pad_char ? ph.pad_char === '0' ? '0' : ph.pad_char.charAt(1) : ' '\n                    pad_length = ph.width - (sign + arg).length\n                    pad = ph.width ? (pad_length > 0 ? pad_character.repeat(pad_length) : '') : ''\n                    output += ph.align ? sign + arg + pad : (pad_character === '0' ? sign + pad + arg : pad + sign + arg)\n                }\n            }\n        }\n        return output\n    }\n\n    var sprintf_cache = Object.create(null)\n\n    function sprintf_parse(fmt) {\n        if (sprintf_cache[fmt]) {\n            return sprintf_cache[fmt]\n        }\n\n        var _fmt = fmt, match, parse_tree = [], arg_names = 0\n        while (_fmt) {\n            if ((match = re.text.exec(_fmt)) !== null) {\n                parse_tree.push(match[0])\n            }\n            else if ((match = re.modulo.exec(_fmt)) !== null) {\n                parse_tree.push('%')\n            }\n            else if ((match = re.placeholder.exec(_fmt)) !== null) {\n                if (match[2]) {\n                    arg_names |= 1\n                    var field_list = [], replacement_field = match[2], field_match = []\n                    if ((field_match = re.key.exec(replacement_field)) !== null) {\n                        field_list.push(field_match[1])\n                        while ((replacement_field = replacement_field.substring(field_match[0].length)) !== '') {\n                            if ((field_match = re.key_access.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1])\n                            }\n                            else if ((field_match = re.index_access.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1])\n                            }\n                            else {\n                                throw new SyntaxError('[sprintf] failed to parse named argument key')\n                            }\n                        }\n                    }\n                    else {\n                        throw new SyntaxError('[sprintf] failed to parse named argument key')\n                    }\n                    match[2] = field_list\n                }\n                else {\n                    arg_names |= 2\n                }\n                if (arg_names === 3) {\n                    throw new Error('[sprintf] mixing positional and named placeholders is not (yet) supported')\n                }\n\n                parse_tree.push(\n                    {\n                        placeholder: match[0],\n                        param_no:    match[1],\n                        keys:        match[2],\n                        sign:        match[3],\n                        pad_char:    match[4],\n                        align:       match[5],\n                        width:       match[6],\n                        precision:   match[7],\n                        type:        match[8]\n                    }\n                )\n            }\n            else {\n                throw new SyntaxError('[sprintf] unexpected placeholder')\n            }\n            _fmt = _fmt.substring(match[0].length)\n        }\n        return sprintf_cache[fmt] = parse_tree\n    }\n\n    /**\n     * export to either browser or node.js\n     */\n    /* eslint-disable quote-props */\n    if (typeof exports !== 'undefined') {\n        exports['sprintf'] = sprintf\n        exports['vsprintf'] = vsprintf\n    }\n    if (typeof window !== 'undefined') {\n        window['sprintf'] = sprintf\n        window['vsprintf'] = vsprintf\n\n        if (typeof define === 'function' && define['amd']) {\n            define(function() {\n                return {\n                    'sprintf': sprintf,\n                    'vsprintf': vsprintf\n                }\n            })\n        }\n    }\n    /* eslint-enable quote-props */\n}(); // eslint-disable-line\n","/**\n * External dependencies\n */\nimport memoize from 'memize';\nimport sprintfjs from 'sprintf-js';\n\n/**\n * Log to console, once per message; or more precisely, per referentially equal\n * argument set. Because Jed throws errors, we log these to the console instead\n * to avoid crashing the application.\n *\n * @param {...*} args Arguments to pass to `console.error`\n */\nconst logErrorOnce = memoize( console.error ); // eslint-disable-line no-console\n\n/**\n * Returns a formatted string. If an error occurs in applying the format, the\n * original format string is returned.\n *\n * @param {string} format The format of the string to generate.\n * @param {...*}   args   Arguments to apply to the format.\n *\n * @see https://www.npmjs.com/package/sprintf-js\n *\n * @return {string} The formatted string.\n */\nexport function sprintf( format, ...args ) {\n\ttry {\n\t\treturn sprintfjs.sprintf( format, ...args );\n\t} catch ( error ) {\n\t\tif ( error instanceof Error ) {\n\t\t\tlogErrorOnce( 'sprintf error: \\n\\n' + error.toString() );\n\t\t}\n\t\treturn format;\n\t}\n}\n","var PRECEDENCE, OPENERS, TERMINATORS, PATTERN;\n\n/**\n * Operator precedence mapping.\n *\n * @type {Object}\n */\nPRECEDENCE = {\n\t'(': 9,\n\t'!': 8,\n\t'*': 7,\n\t'/': 7,\n\t'%': 7,\n\t'+': 6,\n\t'-': 6,\n\t'<': 5,\n\t'<=': 5,\n\t'>': 5,\n\t'>=': 5,\n\t'==': 4,\n\t'!=': 4,\n\t'&&': 3,\n\t'||': 2,\n\t'?': 1,\n\t'?:': 1,\n};\n\n/**\n * Characters which signal pair opening, to be terminated by terminators.\n *\n * @type {string[]}\n */\nOPENERS = [ '(', '?' ];\n\n/**\n * Characters which signal pair termination, the value an array with the\n * opener as its first member. The second member is an optional operator\n * replacement to push to the stack.\n *\n * @type {string[]}\n */\nTERMINATORS = {\n\t')': [ '(' ],\n\t':': [ '?', '?:' ],\n};\n\n/**\n * Pattern matching operators and openers.\n *\n * @type {RegExp}\n */\nPATTERN = /<=|>=|==|!=|&&|\\|\\||\\?:|\\(|!|\\*|\\/|%|\\+|-|<|>|\\?|\\)|:/;\n\n/**\n * Given a C expression, returns the equivalent postfix (Reverse Polish)\n * notation terms as an array.\n *\n * If a postfix string is desired, simply `.join( ' ' )` the result.\n *\n * @example\n *\n * ```js\n * import postfix from '@tannin/postfix';\n *\n * postfix( 'n > 1' );\n * // ⇒ [ 'n', '1', '>' ]\n * ```\n *\n * @param {string} expression C expression.\n *\n * @return {string[]} Postfix terms.\n */\nexport default function postfix( expression ) {\n\tvar terms = [],\n\t\tstack = [],\n\t\tmatch, operator, term, element;\n\n\twhile ( ( match = expression.match( PATTERN ) ) ) {\n\t\toperator = match[ 0 ];\n\n\t\t// Term is the string preceding the operator match. It may contain\n\t\t// whitespace, and may be empty (if operator is at beginning).\n\t\tterm = expression.substr( 0, match.index ).trim();\n\t\tif ( term ) {\n\t\t\tterms.push( term );\n\t\t}\n\n\t\twhile ( ( element = stack.pop() ) ) {\n\t\t\tif ( TERMINATORS[ operator ] ) {\n\t\t\t\tif ( TERMINATORS[ operator ][ 0 ] === element ) {\n\t\t\t\t\t// Substitution works here under assumption that because\n\t\t\t\t\t// the assigned operator will no longer be a terminator, it\n\t\t\t\t\t// will be pushed to the stack during the condition below.\n\t\t\t\t\toperator = TERMINATORS[ operator ][ 1 ] || operator;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if ( OPENERS.indexOf( element ) >= 0 || PRECEDENCE[ element ] < PRECEDENCE[ operator ] ) {\n\t\t\t\t// Push to stack if either an opener or when pop reveals an\n\t\t\t\t// element of lower precedence.\n\t\t\t\tstack.push( element );\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// For each popped from stack, push to terms.\n\t\t\tterms.push( element );\n\t\t}\n\n\t\tif ( ! TERMINATORS[ operator ] ) {\n\t\t\tstack.push( operator );\n\t\t}\n\n\t\t// Slice matched fragment from expression to continue match.\n\t\texpression = expression.substr( match.index + operator.length );\n\t}\n\n\t// Push remainder of operand, if exists, to terms.\n\texpression = expression.trim();\n\tif ( expression ) {\n\t\tterms.push( expression );\n\t}\n\n\t// Pop remaining items from stack into terms.\n\treturn terms.concat( stack.reverse() );\n}\n","/**\n * Operator callback functions.\n *\n * @type {Object}\n */\nvar OPERATORS = {\n\t'!': function( a ) {\n\t\treturn ! a;\n\t},\n\t'*': function( a, b ) {\n\t\treturn a * b;\n\t},\n\t'/': function( a, b ) {\n\t\treturn a / b;\n\t},\n\t'%': function( a, b ) {\n\t\treturn a % b;\n\t},\n\t'+': function( a, b ) {\n\t\treturn a + b;\n\t},\n\t'-': function( a, b ) {\n\t\treturn a - b;\n\t},\n\t'<': function( a, b ) {\n\t\treturn a < b;\n\t},\n\t'<=': function( a, b ) {\n\t\treturn a <= b;\n\t},\n\t'>': function( a, b ) {\n\t\treturn a > b;\n\t},\n\t'>=': function( a, b ) {\n\t\treturn a >= b;\n\t},\n\t'==': function( a, b ) {\n\t\treturn a === b;\n\t},\n\t'!=': function( a, b ) {\n\t\treturn a !== b;\n\t},\n\t'&&': function( a, b ) {\n\t\treturn a && b;\n\t},\n\t'||': function( a, b ) {\n\t\treturn a || b;\n\t},\n\t'?:': function( a, b, c ) {\n\t\tif ( a ) {\n\t\t\tthrow b;\n\t\t}\n\n\t\treturn c;\n\t},\n};\n\n/**\n * Given an array of postfix terms and operand variables, returns the result of\n * the postfix evaluation.\n *\n * @example\n *\n * ```js\n * import evaluate from '@tannin/evaluate';\n *\n * // 3 + 4 * 5 / 6 ⇒ '3 4 5 * 6 / +'\n * const terms = [ '3', '4', '5', '*', '6', '/', '+' ];\n *\n * evaluate( terms, {} );\n * // ⇒ 6.333333333333334\n * ```\n *\n * @param {string[]} postfix   Postfix terms.\n * @param {Object}   variables Operand variables.\n *\n * @return {*} Result of evaluation.\n */\nexport default function evaluate( postfix, variables ) {\n\tvar stack = [],\n\t\ti, j, args, getOperatorResult, term, value;\n\n\tfor ( i = 0; i < postfix.length; i++ ) {\n\t\tterm = postfix[ i ];\n\n\t\tgetOperatorResult = OPERATORS[ term ];\n\t\tif ( getOperatorResult ) {\n\t\t\t// Pop from stack by number of function arguments.\n\t\t\tj = getOperatorResult.length;\n\t\t\targs = Array( j );\n\t\t\twhile ( j-- ) {\n\t\t\t\targs[ j ] = stack.pop();\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tvalue = getOperatorResult.apply( null, args );\n\t\t\t} catch ( earlyReturn ) {\n\t\t\t\treturn earlyReturn;\n\t\t\t}\n\t\t} else if ( variables.hasOwnProperty( term ) ) {\n\t\t\tvalue = variables[ term ];\n\t\t} else {\n\t\t\tvalue = +term;\n\t\t}\n\n\t\tstack.push( value );\n\t}\n\n\treturn stack[ 0 ];\n}\n","import postfix from '@tannin/postfix';\nimport evaluate from '@tannin/evaluate';\n\n/**\n * Given a C expression, returns a function which can be called to evaluate its\n * result.\n *\n * @example\n *\n * ```js\n * import compile from '@tannin/compile';\n *\n * const evaluate = compile( 'n > 1' );\n *\n * evaluate( { n: 2 } );\n * // ⇒ true\n * ```\n *\n * @param {string} expression C expression.\n *\n * @return {(variables?:{[variable:string]:*})=>*} Compiled evaluator.\n */\nexport default function compile( expression ) {\n\tvar terms = postfix( expression );\n\n\treturn function( variables ) {\n\t\treturn evaluate( terms, variables );\n\t};\n}\n","import pluralForms from '@tannin/plural-forms';\n\n/**\n * Tannin constructor options.\n *\n * @typedef {Object} TanninOptions\n *\n * @property {string}   [contextDelimiter] Joiner in string lookup with context.\n * @property {Function} [onMissingKey]     Callback to invoke when key missing.\n */\n\n/**\n * Domain metadata.\n *\n * @typedef {Object} TanninDomainMetadata\n *\n * @property {string}            [domain]       Domain name.\n * @property {string}            [lang]         Language code.\n * @property {(string|Function)} [plural_forms] Plural forms expression or\n *                                              function evaluator.\n */\n\n/**\n * Domain translation pair respectively representing the singular and plural\n * translation.\n *\n * @typedef {[string,string]} TanninTranslation\n */\n\n/**\n * Locale data domain. The key is used as reference for lookup, the value an\n * array of two string entries respectively representing the singular and plural\n * translation.\n *\n * @typedef {{[key:string]:TanninDomainMetadata|TanninTranslation,'':TanninDomainMetadata|TanninTranslation}} TanninLocaleDomain\n */\n\n/**\n * Jed-formatted locale data.\n *\n * @see http://messageformat.github.io/Jed/\n *\n * @typedef {{[domain:string]:TanninLocaleDomain}} TanninLocaleData\n */\n\n/**\n * Default Tannin constructor options.\n *\n * @type {TanninOptions}\n */\nvar DEFAULT_OPTIONS = {\n\tcontextDelimiter: '\\u0004',\n\tonMissingKey: null,\n};\n\n/**\n * Given a specific locale data's config `plural_forms` value, returns the\n * expression.\n *\n * @example\n *\n * ```\n * getPluralExpression( 'nplurals=2; plural=(n != 1);' ) === '(n != 1)'\n * ```\n *\n * @param {string} pf Locale data plural forms.\n *\n * @return {string} Plural forms expression.\n */\nfunction getPluralExpression( pf ) {\n\tvar parts, i, part;\n\n\tparts = pf.split( ';' );\n\n\tfor ( i = 0; i < parts.length; i++ ) {\n\t\tpart = parts[ i ].trim();\n\t\tif ( part.indexOf( 'plural=' ) === 0 ) {\n\t\t\treturn part.substr( 7 );\n\t\t}\n\t}\n}\n\n/**\n * Tannin constructor.\n *\n * @class\n *\n * @param {TanninLocaleData} data      Jed-formatted locale data.\n * @param {TanninOptions}    [options] Tannin options.\n */\nexport default function Tannin( data, options ) {\n\tvar key;\n\n\t/**\n\t * Jed-formatted locale data.\n\t *\n\t * @name Tannin#data\n\t * @type {TanninLocaleData}\n\t */\n\tthis.data = data;\n\n\t/**\n\t * Plural forms function cache, keyed by plural forms string.\n\t *\n\t * @name Tannin#pluralForms\n\t * @type {Object<string,Function>}\n\t */\n\tthis.pluralForms = {};\n\n\t/**\n\t * Effective options for instance, including defaults.\n\t *\n\t * @name Tannin#options\n\t * @type {TanninOptions}\n\t */\n\tthis.options = {};\n\n\tfor ( key in DEFAULT_OPTIONS ) {\n\t\tthis.options[ key ] = options !== undefined && key in options\n\t\t\t? options[ key ]\n\t\t\t: DEFAULT_OPTIONS[ key ];\n\t}\n}\n\n/**\n * Returns the plural form index for the given domain and value.\n *\n * @param {string} domain Domain on which to calculate plural form.\n * @param {number} n      Value for which plural form is to be calculated.\n *\n * @return {number} Plural form index.\n */\nTannin.prototype.getPluralForm = function( domain, n ) {\n\tvar getPluralForm = this.pluralForms[ domain ],\n\t\tconfig, plural, pf;\n\n\tif ( ! getPluralForm ) {\n\t\tconfig = this.data[ domain ][ '' ];\n\n\t\tpf = (\n\t\t\tconfig[ 'Plural-Forms' ] ||\n\t\t\tconfig[ 'plural-forms' ] ||\n\t\t\t// Ignore reason: As known, there's no way to document the empty\n\t\t\t// string property on a key to guarantee this as metadata.\n\t\t\t// @ts-ignore\n\t\t\tconfig.plural_forms\n\t\t);\n\n\t\tif ( typeof pf !== 'function' ) {\n\t\t\tplural = getPluralExpression(\n\t\t\t\tconfig[ 'Plural-Forms' ] ||\n\t\t\t\tconfig[ 'plural-forms' ] ||\n\t\t\t\t// Ignore reason: As known, there's no way to document the empty\n\t\t\t\t// string property on a key to guarantee this as metadata.\n\t\t\t\t// @ts-ignore\n\t\t\t\tconfig.plural_forms\n\t\t\t);\n\n\t\t\tpf = pluralForms( plural );\n\t\t}\n\n\t\tgetPluralForm = this.pluralForms[ domain ] = pf;\n\t}\n\n\treturn getPluralForm( n );\n};\n\n/**\n * Translate a string.\n *\n * @param {string}      domain   Translation domain.\n * @param {string|void} context  Context distinguishing terms of the same name.\n * @param {string}      singular Primary key for translation lookup.\n * @param {string=}     plural   Fallback value used for non-zero plural\n *                               form index.\n * @param {number=}     n        Value to use in calculating plural form.\n *\n * @return {string} Translated string.\n */\nTannin.prototype.dcnpgettext = function( domain, context, singular, plural, n ) {\n\tvar index, key, entry;\n\n\tif ( n === undefined ) {\n\t\t// Default to singular.\n\t\tindex = 0;\n\t} else {\n\t\t// Find index by evaluating plural form for value.\n\t\tindex = this.getPluralForm( domain, n );\n\t}\n\n\tkey = singular;\n\n\t// If provided, context is prepended to key with delimiter.\n\tif ( context ) {\n\t\tkey = context + this.options.contextDelimiter + singular;\n\t}\n\n\tentry = this.data[ domain ][ key ];\n\n\t// Verify not only that entry exists, but that the intended index is within\n\t// range and non-empty.\n\tif ( entry && entry[ index ] ) {\n\t\treturn entry[ index ];\n\t}\n\n\tif ( this.options.onMissingKey ) {\n\t\tthis.options.onMissingKey( singular, domain );\n\t}\n\n\t// If entry not found, fall back to singular vs. plural with zero index\n\t// representing the singular value.\n\treturn index === 0 ? singular : plural;\n};\n","import compile from '@tannin/compile';\n\n/**\n * Given a C expression, returns a function which, when called with a value,\n * evaluates the result with the value assumed to be the \"n\" variable of the\n * expression. The result will be coerced to its numeric equivalent.\n *\n * @param {string} expression C expression.\n *\n * @return {Function} Evaluator function.\n */\nexport default function pluralForms( expression ) {\n\tvar evaluate = compile( expression );\n\n\treturn function( n ) {\n\t\treturn +evaluate( { n: n } );\n\t};\n}\n","/**\n * External dependencies\n */\nimport Tannin from 'tannin';\n\n/**\n * @typedef {Record<string,any>} LocaleData\n */\n\n/**\n * Default locale data to use for Tannin domain when not otherwise provided.\n * Assumes an English plural forms expression.\n *\n * @type {LocaleData}\n */\nconst DEFAULT_LOCALE_DATA = {\n\t'': {\n\t\t/** @param {number} n */\n\t\tplural_forms( n ) {\n\t\t\treturn n === 1 ? 0 : 1;\n\t\t},\n\t},\n};\n\n/*\n * Regular expression that matches i18n hooks like `i18n.gettext`, `i18n.ngettext`,\n * `i18n.gettext_domain` or `i18n.ngettext_with_context` or `i18n.has_translation`.\n */\nconst I18N_HOOK_REGEXP = /^i18n\\.(n?gettext|has_translation)(_|$)/;\n\n/**\n * @typedef {(domain?: string) => LocaleData} GetLocaleData\n *\n * Returns locale data by domain in a\n * Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n */\n/**\n * @typedef {(data?: LocaleData, domain?: string) => void} SetLocaleData\n *\n * Merges locale data into the Tannin instance by domain. Note that this\n * function will overwrite the domain configuration. Accepts data in a\n * Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n */\n/**\n * @typedef {(data?: LocaleData, domain?: string) => void} AddLocaleData\n *\n * Merges locale data into the Tannin instance by domain. Note that this\n * function will also merge the domain configuration. Accepts data in a\n * Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n */\n/**\n * @typedef {(data?: LocaleData, domain?: string) => void} ResetLocaleData\n *\n * Resets all current Tannin instance locale data and sets the specified\n * locale data for the domain. Accepts data in a Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n */\n/** @typedef {() => void} SubscribeCallback */\n/** @typedef {() => void} UnsubscribeCallback */\n/**\n * @typedef {(callback: SubscribeCallback) => UnsubscribeCallback} Subscribe\n *\n * Subscribes to changes of locale data\n */\n/**\n * @typedef {(domain?: string) => string} GetFilterDomain\n * Retrieve the domain to use when calling domain-specific filters.\n */\n/**\n * @typedef {(text: string, domain?: string) => string} __\n *\n * Retrieve the translation of text.\n *\n * @see https://developer.wordpress.org/reference/functions/__/\n */\n/**\n * @typedef {(text: string, context: string, domain?: string) => string} _x\n *\n * Retrieve translated string with gettext context.\n *\n * @see https://developer.wordpress.org/reference/functions/_x/\n */\n/**\n * @typedef {(single: string, plural: string, number: number, domain?: string) => string} _n\n *\n * Translates and retrieves the singular or plural form based on the supplied\n * number.\n *\n * @see https://developer.wordpress.org/reference/functions/_n/\n */\n/**\n * @typedef {(single: string, plural: string, number: number, context: string, domain?: string) => string} _nx\n *\n * Translates and retrieves the singular or plural form based on the supplied\n * number, with gettext context.\n *\n * @see https://developer.wordpress.org/reference/functions/_nx/\n */\n/**\n * @typedef {() => boolean} IsRtl\n *\n * Check if current locale is RTL.\n *\n * **RTL (Right To Left)** is a locale property indicating that text is written from right to left.\n * For example, the `he` locale (for Hebrew) specifies right-to-left. Arabic (ar) is another common\n * language written RTL. The opposite of RTL, LTR (Left To Right) is used in other languages,\n * including English (`en`, `en-US`, `en-GB`, etc.), Spanish (`es`), and French (`fr`).\n */\n/**\n * @typedef {(single: string, context?: string, domain?: string) => boolean} HasTranslation\n *\n * Check if there is a translation for a given string in singular form.\n */\n/** @typedef {import('@wordpress/hooks').Hooks} Hooks */\n\n/**\n * An i18n instance\n *\n * @typedef I18n\n * @property {GetLocaleData}   getLocaleData   Returns locale data by domain in a Jed-formatted JSON object shape.\n * @property {SetLocaleData}   setLocaleData   Merges locale data into the Tannin instance by domain. Note that this\n *                                             function will overwrite the domain configuration. Accepts data in a\n *                                             Jed-formatted JSON object shape.\n * @property {AddLocaleData}   addLocaleData   Merges locale data into the Tannin instance by domain. Note that this\n *                                             function will also merge the domain configuration. Accepts data in a\n *                                             Jed-formatted JSON object shape.\n * @property {ResetLocaleData} resetLocaleData Resets all current Tannin instance locale data and sets the specified\n *                                             locale data for the domain. Accepts data in a Jed-formatted JSON object shape.\n * @property {Subscribe}       subscribe       Subscribes to changes of Tannin locale data.\n * @property {__}              __              Retrieve the translation of text.\n * @property {_x}              _x              Retrieve translated string with gettext context.\n * @property {_n}              _n              Translates and retrieves the singular or plural form based on the supplied\n *                                             number.\n * @property {_nx}             _nx             Translates and retrieves the singular or plural form based on the supplied\n *                                             number, with gettext context.\n * @property {IsRtl}           isRTL           Check if current locale is RTL.\n * @property {HasTranslation}  hasTranslation  Check if there is a translation for a given string.\n */\n\n/**\n * Create an i18n instance\n *\n * @param {LocaleData} [initialData]   Locale data configuration.\n * @param {string}     [initialDomain] Domain for which configuration applies.\n * @param {Hooks}      [hooks]         Hooks implementation.\n *\n * @return {I18n} I18n instance.\n */\nexport const createI18n = ( initialData, initialDomain, hooks ) => {\n\t/**\n\t * The underlying instance of Tannin to which exported functions interface.\n\t *\n\t * @type {Tannin}\n\t */\n\tconst tannin = new Tannin( {} );\n\n\tconst listeners = new Set();\n\n\tconst notifyListeners = () => {\n\t\tlisteners.forEach( ( listener ) => listener() );\n\t};\n\n\t/**\n\t * Subscribe to changes of locale data.\n\t *\n\t * @param {SubscribeCallback} callback Subscription callback.\n\t * @return {UnsubscribeCallback} Unsubscribe callback.\n\t */\n\tconst subscribe = ( callback ) => {\n\t\tlisteners.add( callback );\n\t\treturn () => listeners.delete( callback );\n\t};\n\n\t/** @type {GetLocaleData} */\n\tconst getLocaleData = ( domain = 'default' ) => tannin.data[ domain ];\n\n\t/**\n\t * @param {LocaleData} [data]\n\t * @param {string}     [domain]\n\t */\n\tconst doSetLocaleData = ( data, domain = 'default' ) => {\n\t\ttannin.data[ domain ] = {\n\t\t\t...tannin.data[ domain ],\n\t\t\t...data,\n\t\t};\n\n\t\t// Populate default domain configuration (supported locale date which omits\n\t\t// a plural forms expression).\n\t\ttannin.data[ domain ][ '' ] = {\n\t\t\t...DEFAULT_LOCALE_DATA[ '' ],\n\t\t\t...tannin.data[ domain ]?.[ '' ],\n\t\t};\n\n\t\t// Clean up cached plural forms functions cache as it might be updated.\n\t\tdelete tannin.pluralForms[ domain ];\n\t};\n\n\t/** @type {SetLocaleData} */\n\tconst setLocaleData = ( data, domain ) => {\n\t\tdoSetLocaleData( data, domain );\n\t\tnotifyListeners();\n\t};\n\n\t/** @type {AddLocaleData} */\n\tconst addLocaleData = ( data, domain = 'default' ) => {\n\t\ttannin.data[ domain ] = {\n\t\t\t...tannin.data[ domain ],\n\t\t\t...data,\n\t\t\t// Populate default domain configuration (supported locale date which omits\n\t\t\t// a plural forms expression).\n\t\t\t'': {\n\t\t\t\t...DEFAULT_LOCALE_DATA[ '' ],\n\t\t\t\t...tannin.data[ domain ]?.[ '' ],\n\t\t\t\t...data?.[ '' ],\n\t\t\t},\n\t\t};\n\n\t\t// Clean up cached plural forms functions cache as it might be updated.\n\t\tdelete tannin.pluralForms[ domain ];\n\n\t\tnotifyListeners();\n\t};\n\n\t/** @type {ResetLocaleData} */\n\tconst resetLocaleData = ( data, domain ) => {\n\t\t// Reset all current Tannin locale data.\n\t\ttannin.data = {};\n\n\t\t// Reset cached plural forms functions cache.\n\t\ttannin.pluralForms = {};\n\n\t\tsetLocaleData( data, domain );\n\t};\n\n\t/**\n\t * Wrapper for Tannin's `dcnpgettext`. Populates default locale data if not\n\t * otherwise previously assigned.\n\t *\n\t * @param {string|undefined} domain   Domain to retrieve the translated text.\n\t * @param {string|undefined} context  Context information for the translators.\n\t * @param {string}           single   Text to translate if non-plural. Used as\n\t *                                    fallback return value on a caught error.\n\t * @param {string}           [plural] The text to be used if the number is\n\t *                                    plural.\n\t * @param {number}           [number] The number to compare against to use\n\t *                                    either the singular or plural form.\n\t *\n\t * @return {string} The translated string.\n\t */\n\tconst dcnpgettext = (\n\t\tdomain = 'default',\n\t\tcontext,\n\t\tsingle,\n\t\tplural,\n\t\tnumber\n\t) => {\n\t\tif ( ! tannin.data[ domain ] ) {\n\t\t\t// Use `doSetLocaleData` to set silently, without notifying listeners.\n\t\t\tdoSetLocaleData( undefined, domain );\n\t\t}\n\n\t\treturn tannin.dcnpgettext( domain, context, single, plural, number );\n\t};\n\n\t/** @type {GetFilterDomain} */\n\tconst getFilterDomain = ( domain = 'default' ) => domain;\n\n\t/** @type {__} */\n\tconst __ = ( text, domain ) => {\n\t\tlet translation = dcnpgettext( domain, undefined, text );\n\t\tif ( ! hooks ) {\n\t\t\treturn translation;\n\t\t}\n\n\t\t/**\n\t\t * Filters text with its translation.\n\t\t *\n\t\t * @param {string} translation Translated text.\n\t\t * @param {string} text        Text to translate.\n\t\t * @param {string} domain      Text domain. Unique identifier for retrieving translated strings.\n\t\t */\n\t\ttranslation = /** @type {string} */ (\n\t\t\t/** @type {*} */ hooks.applyFilters(\n\t\t\t\t'i18n.gettext',\n\t\t\t\ttranslation,\n\t\t\t\ttext,\n\t\t\t\tdomain\n\t\t\t)\n\t\t);\n\t\treturn /** @type {string} */ (\n\t\t\t/** @type {*} */ hooks.applyFilters(\n\t\t\t\t'i18n.gettext_' + getFilterDomain( domain ),\n\t\t\t\ttranslation,\n\t\t\t\ttext,\n\t\t\t\tdomain\n\t\t\t)\n\t\t);\n\t};\n\n\t/** @type {_x} */\n\tconst _x = ( text, context, domain ) => {\n\t\tlet translation = dcnpgettext( domain, context, text );\n\t\tif ( ! hooks ) {\n\t\t\treturn translation;\n\t\t}\n\n\t\t/**\n\t\t * Filters text with its translation based on context information.\n\t\t *\n\t\t * @param {string} translation Translated text.\n\t\t * @param {string} text        Text to translate.\n\t\t * @param {string} context     Context information for the translators.\n\t\t * @param {string} domain      Text domain. Unique identifier for retrieving translated strings.\n\t\t */\n\t\ttranslation = /** @type {string} */ (\n\t\t\t/** @type {*} */ hooks.applyFilters(\n\t\t\t\t'i18n.gettext_with_context',\n\t\t\t\ttranslation,\n\t\t\t\ttext,\n\t\t\t\tcontext,\n\t\t\t\tdomain\n\t\t\t)\n\t\t);\n\t\treturn /** @type {string} */ (\n\t\t\t/** @type {*} */ hooks.applyFilters(\n\t\t\t\t'i18n.gettext_with_context_' + getFilterDomain( domain ),\n\t\t\t\ttranslation,\n\t\t\t\ttext,\n\t\t\t\tcontext,\n\t\t\t\tdomain\n\t\t\t)\n\t\t);\n\t};\n\n\t/** @type {_n} */\n\tconst _n = ( single, plural, number, domain ) => {\n\t\tlet translation = dcnpgettext(\n\t\t\tdomain,\n\t\t\tundefined,\n\t\t\tsingle,\n\t\t\tplural,\n\t\t\tnumber\n\t\t);\n\t\tif ( ! hooks ) {\n\t\t\treturn translation;\n\t\t}\n\n\t\t/**\n\t\t * Filters the singular or plural form of a string.\n\t\t *\n\t\t * @param {string} translation Translated text.\n\t\t * @param {string} single      The text to be used if the number is singular.\n\t\t * @param {string} plural      The text to be used if the number is plural.\n\t\t * @param {string} number      The number to compare against to use either the singular or plural form.\n\t\t * @param {string} domain      Text domain. Unique identifier for retrieving translated strings.\n\t\t */\n\t\ttranslation = /** @type {string} */ (\n\t\t\t/** @type {*} */ hooks.applyFilters(\n\t\t\t\t'i18n.ngettext',\n\t\t\t\ttranslation,\n\t\t\t\tsingle,\n\t\t\t\tplural,\n\t\t\t\tnumber,\n\t\t\t\tdomain\n\t\t\t)\n\t\t);\n\t\treturn /** @type {string} */ (\n\t\t\t/** @type {*} */ hooks.applyFilters(\n\t\t\t\t'i18n.ngettext_' + getFilterDomain( domain ),\n\t\t\t\ttranslation,\n\t\t\t\tsingle,\n\t\t\t\tplural,\n\t\t\t\tnumber,\n\t\t\t\tdomain\n\t\t\t)\n\t\t);\n\t};\n\n\t/** @type {_nx} */\n\tconst _nx = ( single, plural, number, context, domain ) => {\n\t\tlet translation = dcnpgettext(\n\t\t\tdomain,\n\t\t\tcontext,\n\t\t\tsingle,\n\t\t\tplural,\n\t\t\tnumber\n\t\t);\n\t\tif ( ! hooks ) {\n\t\t\treturn translation;\n\t\t}\n\n\t\t/**\n\t\t * Filters the singular or plural form of a string with gettext context.\n\t\t *\n\t\t * @param {string} translation Translated text.\n\t\t * @param {string} single      The text to be used if the number is singular.\n\t\t * @param {string} plural      The text to be used if the number is plural.\n\t\t * @param {string} number      The number to compare against to use either the singular or plural form.\n\t\t * @param {string} context     Context information for the translators.\n\t\t * @param {string} domain      Text domain. Unique identifier for retrieving translated strings.\n\t\t */\n\t\ttranslation = /** @type {string} */ (\n\t\t\t/** @type {*} */ hooks.applyFilters(\n\t\t\t\t'i18n.ngettext_with_context',\n\t\t\t\ttranslation,\n\t\t\t\tsingle,\n\t\t\t\tplural,\n\t\t\t\tnumber,\n\t\t\t\tcontext,\n\t\t\t\tdomain\n\t\t\t)\n\t\t);\n\n\t\treturn /** @type {string} */ (\n\t\t\t/** @type {*} */ hooks.applyFilters(\n\t\t\t\t'i18n.ngettext_with_context_' + getFilterDomain( domain ),\n\t\t\t\ttranslation,\n\t\t\t\tsingle,\n\t\t\t\tplural,\n\t\t\t\tnumber,\n\t\t\t\tcontext,\n\t\t\t\tdomain\n\t\t\t)\n\t\t);\n\t};\n\n\t/** @type {IsRtl} */\n\tconst isRTL = () => {\n\t\treturn 'rtl' === _x( 'ltr', 'text direction' );\n\t};\n\n\t/** @type {HasTranslation} */\n\tconst hasTranslation = ( single, context, domain ) => {\n\t\tconst key = context ? context + '\\u0004' + single : single;\n\t\tlet result = !! tannin.data?.[ domain ?? 'default' ]?.[ key ];\n\t\tif ( hooks ) {\n\t\t\t/**\n\t\t\t * Filters the presence of a translation in the locale data.\n\t\t\t *\n\t\t\t * @param {boolean} hasTranslation Whether the translation is present or not..\n\t\t\t * @param {string}  single         The singular form of the translated text (used as key in locale data)\n\t\t\t * @param {string}  context        Context information for the translators.\n\t\t\t * @param {string}  domain         Text domain. Unique identifier for retrieving translated strings.\n\t\t\t */\n\t\t\tresult = /** @type { boolean } */ (\n\t\t\t\t/** @type {*} */ hooks.applyFilters(\n\t\t\t\t\t'i18n.has_translation',\n\t\t\t\t\tresult,\n\t\t\t\t\tsingle,\n\t\t\t\t\tcontext,\n\t\t\t\t\tdomain\n\t\t\t\t)\n\t\t\t);\n\n\t\t\tresult = /** @type { boolean } */ (\n\t\t\t\t/** @type {*} */ hooks.applyFilters(\n\t\t\t\t\t'i18n.has_translation_' + getFilterDomain( domain ),\n\t\t\t\t\tresult,\n\t\t\t\t\tsingle,\n\t\t\t\t\tcontext,\n\t\t\t\t\tdomain\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t\treturn result;\n\t};\n\n\tif ( initialData ) {\n\t\tsetLocaleData( initialData, initialDomain );\n\t}\n\n\tif ( hooks ) {\n\t\t/**\n\t\t * @param {string} hookName\n\t\t */\n\t\tconst onHookAddedOrRemoved = ( hookName ) => {\n\t\t\tif ( I18N_HOOK_REGEXP.test( hookName ) ) {\n\t\t\t\tnotifyListeners();\n\t\t\t}\n\t\t};\n\n\t\thooks.addAction( 'hookAdded', 'core/i18n', onHookAddedOrRemoved );\n\t\thooks.addAction( 'hookRemoved', 'core/i18n', onHookAddedOrRemoved );\n\t}\n\n\treturn {\n\t\tgetLocaleData,\n\t\tsetLocaleData,\n\t\taddLocaleData,\n\t\tresetLocaleData,\n\t\tsubscribe,\n\t\t__,\n\t\t_x,\n\t\t_n,\n\t\t_nx,\n\t\tisRTL,\n\t\thasTranslation,\n\t};\n};\n","/**\n * Validate a namespace string.\n *\n * @param {string} namespace The namespace to validate - should take the form\n *                           `vendor/plugin/function`.\n *\n * @return {boolean} Whether the namespace is valid.\n */\nfunction validateNamespace( namespace ) {\n\tif ( 'string' !== typeof namespace || '' === namespace ) {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.error( 'The namespace must be a non-empty string.' );\n\t\treturn false;\n\t}\n\n\tif ( ! /^[a-zA-Z][a-zA-Z0-9_.\\-\\/]*$/.test( namespace ) ) {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.error(\n\t\t\t'The namespace can only contain numbers, letters, dashes, periods, underscores and slashes.'\n\t\t);\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\nexport default validateNamespace;\n","/**\n * Validate a hookName string.\n *\n * @param {string} hookName The hook name to validate. Should be a non empty string containing\n *                          only numbers, letters, dashes, periods and underscores. Also,\n *                          the hook name cannot begin with `__`.\n *\n * @return {boolean} Whether the hook name is valid.\n */\nfunction validateHookName( hookName ) {\n\tif ( 'string' !== typeof hookName || '' === hookName ) {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.error( 'The hook name must be a non-empty string.' );\n\t\treturn false;\n\t}\n\n\tif ( /^__/.test( hookName ) ) {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.error( 'The hook name cannot begin with `__`.' );\n\t\treturn false;\n\t}\n\n\tif ( ! /^[a-zA-Z][a-zA-Z0-9_.-]*$/.test( hookName ) ) {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.error(\n\t\t\t'The hook name can only contain numbers, letters, dashes, periods and underscores.'\n\t\t);\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\nexport default validateHookName;\n","/**\n * Internal dependencies\n */\nimport validateNamespace from './validateNamespace.js';\nimport validateHookName from './validateHookName.js';\n\n/**\n * @callback AddHook\n *\n * Adds the hook to the appropriate hooks container.\n *\n * @param {string}               hookName      Name of hook to add\n * @param {string}               namespace     The unique namespace identifying the callback in the form `vendor/plugin/function`.\n * @param {import('.').Callback} callback      Function to call when the hook is run\n * @param {number}               [priority=10] Priority of this hook\n */\n\n/**\n * Returns a function which, when invoked, will add a hook.\n *\n * @param {import('.').Hooks}    hooks    Hooks instance.\n * @param {import('.').StoreKey} storeKey\n *\n * @return {AddHook} Function that adds a new hook.\n */\nfunction createAddHook( hooks, storeKey ) {\n\treturn function addHook( hookName, namespace, callback, priority = 10 ) {\n\t\tconst hooksStore = hooks[ storeKey ];\n\n\t\tif ( ! validateHookName( hookName ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! validateNamespace( namespace ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( 'function' !== typeof callback ) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error( 'The hook callback must be a function.' );\n\t\t\treturn;\n\t\t}\n\n\t\t// Validate numeric priority\n\t\tif ( 'number' !== typeof priority ) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error(\n\t\t\t\t'If specified, the hook priority must be a number.'\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tconst handler = { callback, priority, namespace };\n\n\t\tif ( hooksStore[ hookName ] ) {\n\t\t\t// Find the correct insert index of the new hook.\n\t\t\tconst handlers = hooksStore[ hookName ].handlers;\n\n\t\t\t/** @type {number} */\n\t\t\tlet i;\n\t\t\tfor ( i = handlers.length; i > 0; i-- ) {\n\t\t\t\tif ( priority >= handlers[ i - 1 ].priority ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( i === handlers.length ) {\n\t\t\t\t// If append, operate via direct assignment.\n\t\t\t\thandlers[ i ] = handler;\n\t\t\t} else {\n\t\t\t\t// Otherwise, insert before index via splice.\n\t\t\t\thandlers.splice( i, 0, handler );\n\t\t\t}\n\n\t\t\t// We may also be currently executing this hook.  If the callback\n\t\t\t// we're adding would come after the current callback, there's no\n\t\t\t// problem; otherwise we need to increase the execution index of\n\t\t\t// any other runs by 1 to account for the added element.\n\t\t\thooksStore.__current.forEach( ( hookInfo ) => {\n\t\t\t\tif (\n\t\t\t\t\thookInfo.name === hookName &&\n\t\t\t\t\thookInfo.currentIndex >= i\n\t\t\t\t) {\n\t\t\t\t\thookInfo.currentIndex++;\n\t\t\t\t}\n\t\t\t} );\n\t\t} else {\n\t\t\t// This is the first hook of its type.\n\t\t\thooksStore[ hookName ] = {\n\t\t\t\thandlers: [ handler ],\n\t\t\t\truns: 0,\n\t\t\t};\n\t\t}\n\n\t\tif ( hookName !== 'hookAdded' ) {\n\t\t\thooks.doAction(\n\t\t\t\t'hookAdded',\n\t\t\t\thookName,\n\t\t\t\tnamespace,\n\t\t\t\tcallback,\n\t\t\t\tpriority\n\t\t\t);\n\t\t}\n\t};\n}\n\nexport default createAddHook;\n","/**\n * Internal dependencies\n */\nimport validateNamespace from './validateNamespace.js';\nimport validateHookName from './validateHookName.js';\n\n/**\n * @callback RemoveHook\n * Removes the specified callback (or all callbacks) from the hook with a given hookName\n * and namespace.\n *\n * @param {string} hookName  The name of the hook to modify.\n * @param {string} namespace The unique namespace identifying the callback in the\n *                           form `vendor/plugin/function`.\n *\n * @return {number | undefined} The number of callbacks removed.\n */\n\n/**\n * Returns a function which, when invoked, will remove a specified hook or all\n * hooks by the given name.\n *\n * @param {import('.').Hooks}    hooks             Hooks instance.\n * @param {import('.').StoreKey} storeKey\n * @param {boolean}              [removeAll=false] Whether to remove all callbacks for a hookName,\n *                                                 without regard to namespace. Used to create\n *                                                 `removeAll*` functions.\n *\n * @return {RemoveHook} Function that removes hooks.\n */\nfunction createRemoveHook( hooks, storeKey, removeAll = false ) {\n\treturn function removeHook( hookName, namespace ) {\n\t\tconst hooksStore = hooks[ storeKey ];\n\n\t\tif ( ! validateHookName( hookName ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! removeAll && ! validateNamespace( namespace ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Bail if no hooks exist by this name.\n\t\tif ( ! hooksStore[ hookName ] ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tlet handlersRemoved = 0;\n\n\t\tif ( removeAll ) {\n\t\t\thandlersRemoved = hooksStore[ hookName ].handlers.length;\n\t\t\thooksStore[ hookName ] = {\n\t\t\t\truns: hooksStore[ hookName ].runs,\n\t\t\t\thandlers: [],\n\t\t\t};\n\t\t} else {\n\t\t\t// Try to find the specified callback to remove.\n\t\t\tconst handlers = hooksStore[ hookName ].handlers;\n\t\t\tfor ( let i = handlers.length - 1; i >= 0; i-- ) {\n\t\t\t\tif ( handlers[ i ].namespace === namespace ) {\n\t\t\t\t\thandlers.splice( i, 1 );\n\t\t\t\t\thandlersRemoved++;\n\t\t\t\t\t// This callback may also be part of a hook that is\n\t\t\t\t\t// currently executing.  If the callback we're removing\n\t\t\t\t\t// comes after the current callback, there's no problem;\n\t\t\t\t\t// otherwise we need to decrease the execution index of any\n\t\t\t\t\t// other runs by 1 to account for the removed element.\n\t\t\t\t\thooksStore.__current.forEach( ( hookInfo ) => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\thookInfo.name === hookName &&\n\t\t\t\t\t\t\thookInfo.currentIndex >= i\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\thookInfo.currentIndex--;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( hookName !== 'hookRemoved' ) {\n\t\t\thooks.doAction( 'hookRemoved', hookName, namespace );\n\t\t}\n\n\t\treturn handlersRemoved;\n\t};\n}\n\nexport default createRemoveHook;\n","/**\n * @callback HasHook\n *\n * Returns whether any handlers are attached for the given hookName and optional namespace.\n *\n * @param {string} hookName    The name of the hook to check for.\n * @param {string} [namespace] Optional. The unique namespace identifying the callback\n *                             in the form `vendor/plugin/function`.\n *\n * @return {boolean} Whether there are handlers that are attached to the given hook.\n */\n/**\n * Returns a function which, when invoked, will return whether any handlers are\n * attached to a particular hook.\n *\n * @param {import('.').Hooks}    hooks    Hooks instance.\n * @param {import('.').StoreKey} storeKey\n *\n * @return {HasHook} Function that returns whether any handlers are\n *                   attached to a particular hook and optional namespace.\n */\nfunction createHasHook( hooks, storeKey ) {\n\treturn function hasHook( hookName, namespace ) {\n\t\tconst hooksStore = hooks[ storeKey ];\n\n\t\t// Use the namespace if provided.\n\t\tif ( 'undefined' !== typeof namespace ) {\n\t\t\treturn (\n\t\t\t\thookName in hooksStore &&\n\t\t\t\thooksStore[ hookName ].handlers.some(\n\t\t\t\t\t( hook ) => hook.namespace === namespace\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\treturn hookName in hooksStore;\n\t};\n}\n\nexport default createHasHook;\n","/**\n * Returns a function which, when invoked, will execute all callbacks\n * registered to a hook of the specified type, optionally returning the final\n * value of the call chain.\n *\n * @param {import('.').Hooks}    hooks                  Hooks instance.\n * @param {import('.').StoreKey} storeKey\n * @param {boolean}              [returnFirstArg=false] Whether each hook callback is expected to\n *                                                      return its first argument.\n *\n * @return {(hookName:string, ...args: unknown[]) => unknown} Function that runs hook callbacks.\n */\nfunction createRunHook( hooks, storeKey, returnFirstArg = false ) {\n\treturn function runHooks( hookName, ...args ) {\n\t\tconst hooksStore = hooks[ storeKey ];\n\n\t\tif ( ! hooksStore[ hookName ] ) {\n\t\t\thooksStore[ hookName ] = {\n\t\t\t\thandlers: [],\n\t\t\t\truns: 0,\n\t\t\t};\n\t\t}\n\n\t\thooksStore[ hookName ].runs++;\n\n\t\tconst handlers = hooksStore[ hookName ].handlers;\n\n\t\t// The following code is stripped from production builds.\n\t\tif ( 'production' !== process.env.NODE_ENV ) {\n\t\t\t// Handle any 'all' hooks registered.\n\t\t\tif ( 'hookAdded' !== hookName && hooksStore.all ) {\n\t\t\t\thandlers.push( ...hooksStore.all.handlers );\n\t\t\t}\n\t\t}\n\n\t\tif ( ! handlers || ! handlers.length ) {\n\t\t\treturn returnFirstArg ? args[ 0 ] : undefined;\n\t\t}\n\n\t\tconst hookInfo = {\n\t\t\tname: hookName,\n\t\t\tcurrentIndex: 0,\n\t\t};\n\n\t\thooksStore.__current.push( hookInfo );\n\n\t\twhile ( hookInfo.currentIndex < handlers.length ) {\n\t\t\tconst handler = handlers[ hookInfo.currentIndex ];\n\n\t\t\tconst result = handler.callback.apply( null, args );\n\t\t\tif ( returnFirstArg ) {\n\t\t\t\targs[ 0 ] = result;\n\t\t\t}\n\n\t\t\thookInfo.currentIndex++;\n\t\t}\n\n\t\thooksStore.__current.pop();\n\n\t\tif ( returnFirstArg ) {\n\t\t\treturn args[ 0 ];\n\t\t}\n\t};\n}\n\nexport default createRunHook;\n","/**\n * Returns a function which, when invoked, will return the name of the\n * currently running hook, or `null` if no hook of the given type is currently\n * running.\n *\n * @param {import('.').Hooks}    hooks    Hooks instance.\n * @param {import('.').StoreKey} storeKey\n *\n * @return {() => string | null} Function that returns the current hook name or null.\n */\nfunction createCurrentHook( hooks, storeKey ) {\n\treturn function currentHook() {\n\t\tconst hooksStore = hooks[ storeKey ];\n\n\t\treturn (\n\t\t\thooksStore.__current[ hooksStore.__current.length - 1 ]?.name ??\n\t\t\tnull\n\t\t);\n\t};\n}\n\nexport default createCurrentHook;\n","/**\n * @callback DoingHook\n * Returns whether a hook is currently being executed.\n *\n * @param {string} [hookName] The name of the hook to check for.  If\n *                            omitted, will check for any hook being executed.\n *\n * @return {boolean} Whether the hook is being executed.\n */\n\n/**\n * Returns a function which, when invoked, will return whether a hook is\n * currently being executed.\n *\n * @param {import('.').Hooks}    hooks    Hooks instance.\n * @param {import('.').StoreKey} storeKey\n *\n * @return {DoingHook} Function that returns whether a hook is currently\n *                     being executed.\n */\nfunction createDoingHook( hooks, storeKey ) {\n\treturn function doingHook( hookName ) {\n\t\tconst hooksStore = hooks[ storeKey ];\n\n\t\t// If the hookName was not passed, check for any current hook.\n\t\tif ( 'undefined' === typeof hookName ) {\n\t\t\treturn 'undefined' !== typeof hooksStore.__current[ 0 ];\n\t\t}\n\n\t\t// Return the __current hook.\n\t\treturn hooksStore.__current[ 0 ]\n\t\t\t? hookName === hooksStore.__current[ 0 ].name\n\t\t\t: false;\n\t};\n}\n\nexport default createDoingHook;\n","/**\n * Internal dependencies\n */\nimport validateHookName from './validateHookName.js';\n\n/**\n * @callback DidHook\n *\n * Returns the number of times an action has been fired.\n *\n * @param {string} hookName The hook name to check.\n *\n * @return {number | undefined} The number of times the hook has run.\n */\n\n/**\n * Returns a function which, when invoked, will return the number of times a\n * hook has been called.\n *\n * @param {import('.').Hooks}    hooks    Hooks instance.\n * @param {import('.').StoreKey} storeKey\n *\n * @return {DidHook} Function that returns a hook's call count.\n */\nfunction createDidHook( hooks, storeKey ) {\n\treturn function didHook( hookName ) {\n\t\tconst hooksStore = hooks[ storeKey ];\n\n\t\tif ( ! validateHookName( hookName ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn hooksStore[ hookName ] && hooksStore[ hookName ].runs\n\t\t\t? hooksStore[ hookName ].runs\n\t\t\t: 0;\n\t};\n}\n\nexport default createDidHook;\n","/**\n * Internal dependencies\n */\nimport createAddHook from './createAddHook';\nimport createRemoveHook from './createRemoveHook';\nimport createHasHook from './createHasHook';\nimport createRunHook from './createRunHook';\nimport createCurrentHook from './createCurrentHook';\nimport createDoingHook from './createDoingHook';\nimport createDidHook from './createDidHook';\n\n/**\n * Internal class for constructing hooks. Use `createHooks()` function\n *\n * Note, it is necessary to expose this class to make its type public.\n *\n * @private\n */\nexport class _Hooks {\n\tconstructor() {\n\t\t/** @type {import('.').Store} actions */\n\t\tthis.actions = Object.create( null );\n\t\tthis.actions.__current = [];\n\n\t\t/** @type {import('.').Store} filters */\n\t\tthis.filters = Object.create( null );\n\t\tthis.filters.__current = [];\n\n\t\tthis.addAction = createAddHook( this, 'actions' );\n\t\tthis.addFilter = createAddHook( this, 'filters' );\n\t\tthis.removeAction = createRemoveHook( this, 'actions' );\n\t\tthis.removeFilter = createRemoveHook( this, 'filters' );\n\t\tthis.hasAction = createHasHook( this, 'actions' );\n\t\tthis.hasFilter = createHasHook( this, 'filters' );\n\t\tthis.removeAllActions = createRemoveHook( this, 'actions', true );\n\t\tthis.removeAllFilters = createRemoveHook( this, 'filters', true );\n\t\tthis.doAction = createRunHook( this, 'actions' );\n\t\tthis.applyFilters = createRunHook( this, 'filters', true );\n\t\tthis.currentAction = createCurrentHook( this, 'actions' );\n\t\tthis.currentFilter = createCurrentHook( this, 'filters' );\n\t\tthis.doingAction = createDoingHook( this, 'actions' );\n\t\tthis.doingFilter = createDoingHook( this, 'filters' );\n\t\tthis.didAction = createDidHook( this, 'actions' );\n\t\tthis.didFilter = createDidHook( this, 'filters' );\n\t}\n}\n\n/** @typedef {_Hooks} Hooks */\n\n/**\n * Returns an instance of the hooks object.\n *\n * @return {Hooks} A Hooks instance.\n */\nfunction createHooks() {\n\treturn new _Hooks();\n}\n\nexport default createHooks;\n","/**\n * Internal dependencies\n */\nimport createHooks from './createHooks';\n\n/** @typedef {(...args: any[])=>any} Callback */\n\n/**\n * @typedef Handler\n * @property {Callback} callback  The callback\n * @property {string}   namespace The namespace\n * @property {number}   priority  The namespace\n */\n\n/**\n * @typedef Hook\n * @property {Handler[]} handlers Array of handlers\n * @property {number}    runs     Run counter\n */\n\n/**\n * @typedef Current\n * @property {string} name         Hook name\n * @property {number} currentIndex The index\n */\n\n/**\n * @typedef {Record<string, Hook> & {__current: Current[]}} Store\n */\n\n/**\n * @typedef {'actions' | 'filters'} StoreKey\n */\n\n/**\n * @typedef {import('./createHooks').Hooks} Hooks\n */\n\nexport const defaultHooks = createHooks();\n\nconst {\n\taddAction,\n\taddFilter,\n\tremoveAction,\n\tremoveFilter,\n\thasAction,\n\thasFilter,\n\tremoveAllActions,\n\tremoveAllFilters,\n\tdoAction,\n\tapplyFilters,\n\tcurrentAction,\n\tcurrentFilter,\n\tdoingAction,\n\tdoingFilter,\n\tdidAction,\n\tdidFilter,\n\tactions,\n\tfilters,\n} = defaultHooks;\n\nexport {\n\tcreateHooks,\n\taddAction,\n\taddFilter,\n\tremoveAction,\n\tremoveFilter,\n\thasAction,\n\thasFilter,\n\tremoveAllActions,\n\tremoveAllFilters,\n\tdoAction,\n\tapplyFilters,\n\tcurrentAction,\n\tcurrentFilter,\n\tdoingAction,\n\tdoingFilter,\n\tdidAction,\n\tdidFilter,\n\tactions,\n\tfilters,\n};\n","/**\n * Internal dependencies\n */\nimport { createI18n } from './create-i18n';\n\n/**\n * WordPress dependencies\n */\nimport { defaultHooks } from '@wordpress/hooks';\n\nconst i18n = createI18n( undefined, undefined, defaultHooks );\n\n/**\n * Default, singleton instance of `I18n`.\n */\nexport default i18n;\n\n/*\n * Comments in this file are duplicated from ./i18n due to\n * https://github.com/WordPress/gutenberg/pull/20318#issuecomment-590837722\n */\n\n/**\n * @typedef {import('./create-i18n').LocaleData} LocaleData\n * @typedef {import('./create-i18n').SubscribeCallback} SubscribeCallback\n * @typedef {import('./create-i18n').UnsubscribeCallback} UnsubscribeCallback\n */\n\n/**\n * Returns locale data by domain in a Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n *\n * @param {string} [domain] Domain for which to get the data.\n * @return {LocaleData} Locale data.\n */\nexport const getLocaleData = i18n.getLocaleData.bind( i18n );\n\n/**\n * Merges locale data into the Tannin instance by domain. Accepts data in a\n * Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n *\n * @param {LocaleData} [data]   Locale data configuration.\n * @param {string}     [domain] Domain for which configuration applies.\n */\nexport const setLocaleData = i18n.setLocaleData.bind( i18n );\n\n/**\n * Resets all current Tannin instance locale data and sets the specified\n * locale data for the domain. Accepts data in a Jed-formatted JSON object shape.\n *\n * @see http://messageformat.github.io/Jed/\n *\n * @param {LocaleData} [data]   Locale data configuration.\n * @param {string}     [domain] Domain for which configuration applies.\n */\nexport const resetLocaleData = i18n.resetLocaleData.bind( i18n );\n\n/**\n * Subscribes to changes of locale data\n *\n * @param {SubscribeCallback} callback Subscription callback\n * @return {UnsubscribeCallback} Unsubscribe callback\n */\nexport const subscribe = i18n.subscribe.bind( i18n );\n\n/**\n * Retrieve the translation of text.\n *\n * @see https://developer.wordpress.org/reference/functions/__/\n *\n * @param {string} text     Text to translate.\n * @param {string} [domain] Domain to retrieve the translated text.\n *\n * @return {string} Translated text.\n */\nexport const __ = i18n.__.bind( i18n );\n\n/**\n * Retrieve translated string with gettext context.\n *\n * @see https://developer.wordpress.org/reference/functions/_x/\n *\n * @param {string} text     Text to translate.\n * @param {string} context  Context information for the translators.\n * @param {string} [domain] Domain to retrieve the translated text.\n *\n * @return {string} Translated context string without pipe.\n */\nexport const _x = i18n._x.bind( i18n );\n\n/**\n * Translates and retrieves the singular or plural form based on the supplied\n * number.\n *\n * @see https://developer.wordpress.org/reference/functions/_n/\n *\n * @param {string} single   The text to be used if the number is singular.\n * @param {string} plural   The text to be used if the number is plural.\n * @param {number} number   The number to compare against to use either the\n *                          singular or plural form.\n * @param {string} [domain] Domain to retrieve the translated text.\n *\n * @return {string} The translated singular or plural form.\n */\nexport const _n = i18n._n.bind( i18n );\n\n/**\n * Translates and retrieves the singular or plural form based on the supplied\n * number, with gettext context.\n *\n * @see https://developer.wordpress.org/reference/functions/_nx/\n *\n * @param {string} single   The text to be used if the number is singular.\n * @param {string} plural   The text to be used if the number is plural.\n * @param {number} number   The number to compare against to use either the\n *                          singular or plural form.\n * @param {string} context  Context information for the translators.\n * @param {string} [domain] Domain to retrieve the translated text.\n *\n * @return {string} The translated singular or plural form.\n */\nexport const _nx = i18n._nx.bind( i18n );\n\n/**\n * Check if current locale is RTL.\n *\n * **RTL (Right To Left)** is a locale property indicating that text is written from right to left.\n * For example, the `he` locale (for Hebrew) specifies right-to-left. Arabic (ar) is another common\n * language written RTL. The opposite of RTL, LTR (Left To Right) is used in other languages,\n * including English (`en`, `en-US`, `en-GB`, etc.), Spanish (`es`), and French (`fr`).\n *\n * @return {boolean} Whether locale is RTL.\n */\nexport const isRTL = i18n.isRTL.bind( i18n );\n\n/**\n * Check if there is a translation for a given string (in singular form).\n *\n * @param {string} single    Singular form of the string to look up.\n * @param {string} [context] Context information for the translators.\n * @param {string} [domain]  Domain to retrieve the translated text.\n * @return {boolean} Whether the translation exists or not.\n */\nexport const hasTranslation = i18n.hasTranslation.bind( i18n );\n","/**\n * @param {string} nonce\n * @return {import('../types').APIFetchMiddleware & { nonce: string }} A middleware to enhance a request with a nonce.\n */\nfunction createNonceMiddleware( nonce ) {\n\t/**\n\t * @type {import('../types').APIFetchMiddleware & { nonce: string }}\n\t */\n\tconst middleware = ( options, next ) => {\n\t\tconst { headers = {} } = options;\n\n\t\t// If an 'X-WP-Nonce' header (or any case-insensitive variation\n\t\t// thereof) was specified, no need to add a nonce header.\n\t\tfor ( const headerName in headers ) {\n\t\t\tif (\n\t\t\t\theaderName.toLowerCase() === 'x-wp-nonce' &&\n\t\t\t\theaders[ headerName ] === middleware.nonce\n\t\t\t) {\n\t\t\t\treturn next( options );\n\t\t\t}\n\t\t}\n\n\t\treturn next( {\n\t\t\t...options,\n\t\t\theaders: {\n\t\t\t\t...headers,\n\t\t\t\t'X-WP-Nonce': middleware.nonce,\n\t\t\t},\n\t\t} );\n\t};\n\n\tmiddleware.nonce = nonce;\n\n\treturn middleware;\n}\n\nexport default createNonceMiddleware;\n","/**\n * @type {import('../types').APIFetchMiddleware}\n */\nconst namespaceAndEndpointMiddleware = ( options, next ) => {\n\tlet path = options.path;\n\tlet namespaceTrimmed, endpointTrimmed;\n\n\tif (\n\t\ttypeof options.namespace === 'string' &&\n\t\ttypeof options.endpoint === 'string'\n\t) {\n\t\tnamespaceTrimmed = options.namespace.replace( /^\\/|\\/$/g, '' );\n\t\tendpointTrimmed = options.endpoint.replace( /^\\//, '' );\n\t\tif ( endpointTrimmed ) {\n\t\t\tpath = namespaceTrimmed + '/' + endpointTrimmed;\n\t\t} else {\n\t\t\tpath = namespaceTrimmed;\n\t\t}\n\t}\n\n\tdelete options.namespace;\n\tdelete options.endpoint;\n\n\treturn next( {\n\t\t...options,\n\t\tpath,\n\t} );\n};\n\nexport default namespaceAndEndpointMiddleware;\n","/**\n * Internal dependencies\n */\nimport namespaceAndEndpointMiddleware from './namespace-endpoint';\n\n/**\n * @param {string} rootURL\n * @return {import('../types').APIFetchMiddleware} Root URL middleware.\n */\nconst createRootURLMiddleware = ( rootURL ) => ( options, next ) => {\n\treturn namespaceAndEndpointMiddleware( options, ( optionsWithPath ) => {\n\t\tlet url = optionsWithPath.url;\n\t\tlet path = optionsWithPath.path;\n\t\tlet apiRoot;\n\n\t\tif ( typeof path === 'string' ) {\n\t\t\tapiRoot = rootURL;\n\n\t\t\tif ( -1 !== rootURL.indexOf( '?' ) ) {\n\t\t\t\tpath = path.replace( '?', '&' );\n\t\t\t}\n\n\t\t\tpath = path.replace( /^\\//, '' );\n\n\t\t\t// API root may already include query parameter prefix if site is\n\t\t\t// configured to use plain permalinks.\n\t\t\tif (\n\t\t\t\t'string' === typeof apiRoot &&\n\t\t\t\t-1 !== apiRoot.indexOf( '?' )\n\t\t\t) {\n\t\t\t\tpath = path.replace( '?', '&' );\n\t\t\t}\n\n\t\t\turl = apiRoot + path;\n\t\t}\n\n\t\treturn next( {\n\t\t\t...optionsWithPath,\n\t\t\turl,\n\t\t} );\n\t} );\n};\n\nexport default createRootURLMiddleware;\n","/**\n * Safely decodes a URI component with `decodeURIComponent`. Returns the URI component unmodified if\n * `decodeURIComponent` throws an error.\n *\n * @param {string} uriComponent URI component to decode.\n *\n * @return {string} Decoded URI component if possible.\n */\nexport function safeDecodeURIComponent( uriComponent ) {\n\ttry {\n\t\treturn decodeURIComponent( uriComponent );\n\t} catch ( uriComponentError ) {\n\t\treturn uriComponent;\n\t}\n}\n","/**\n * Returns the query string part of the URL.\n *\n * @param {string} url The full URL.\n *\n * @example\n * ```js\n * const queryString = getQueryString( 'http://localhost:8080/this/is/a/test?query=true#fragment' ); // 'query=true'\n * ```\n *\n * @return {string|void} The query string part of the URL.\n */\nexport function getQueryString( url ) {\n\tlet query;\n\ttry {\n\t\tquery = new URL( url, 'http://example.com' ).search.substring( 1 );\n\t} catch ( error ) {}\n\n\tif ( query ) {\n\t\treturn query;\n\t}\n}\n","/**\n * Internal dependencies\n */\nimport { safeDecodeURIComponent } from './safe-decode-uri-component';\nimport { getQueryString } from './get-query-string';\n\n/** @typedef {import('./get-query-arg').QueryArgParsed} QueryArgParsed */\n\n/**\n * @typedef {Record<string,QueryArgParsed>} QueryArgs\n */\n\n/**\n * Sets a value in object deeply by a given array of path segments. Mutates the\n * object reference.\n *\n * @param {Record<string,*>} object Object in which to assign.\n * @param {string[]}         path   Path segment at which to set value.\n * @param {*}                value  Value to set.\n */\nfunction setPath( object, path, value ) {\n\tconst length = path.length;\n\tconst lastIndex = length - 1;\n\tfor ( let i = 0; i < length; i++ ) {\n\t\tlet key = path[ i ];\n\n\t\tif ( ! key && Array.isArray( object ) ) {\n\t\t\t// If key is empty string and next value is array, derive key from\n\t\t\t// the current length of the array.\n\t\t\tkey = object.length.toString();\n\t\t}\n\n\t\tkey = [ '__proto__', 'constructor', 'prototype' ].includes( key )\n\t\t\t? key.toUpperCase()\n\t\t\t: key;\n\n\t\t// If the next key in the path is numeric (or empty string), it will be\n\t\t// created as an array. Otherwise, it will be created as an object.\n\t\tconst isNextKeyArrayIndex = ! isNaN( Number( path[ i + 1 ] ) );\n\n\t\tobject[ key ] =\n\t\t\ti === lastIndex\n\t\t\t\t? // If at end of path, assign the intended value.\n\t\t\t\t  value\n\t\t\t\t: // Otherwise, advance to the next object in the path, creating\n\t\t\t\t  // it if it does not yet exist.\n\t\t\t\t  object[ key ] || ( isNextKeyArrayIndex ? [] : {} );\n\n\t\tif ( Array.isArray( object[ key ] ) && ! isNextKeyArrayIndex ) {\n\t\t\t// If we current key is non-numeric, but the next value is an\n\t\t\t// array, coerce the value to an object.\n\t\t\tobject[ key ] = { ...object[ key ] };\n\t\t}\n\n\t\t// Update working reference object to the next in the path.\n\t\tobject = object[ key ];\n\t}\n}\n\n/**\n * Returns an object of query arguments of the given URL. If the given URL is\n * invalid or has no querystring, an empty object is returned.\n *\n * @param {string} url URL.\n *\n * @example\n * ```js\n * const foo = getQueryArgs( 'https://wordpress.org?foo=bar&bar=baz' );\n * // { \"foo\": \"bar\", \"bar\": \"baz\" }\n * ```\n *\n * @return {QueryArgs} Query args object.\n */\nexport function getQueryArgs( url ) {\n\treturn (\n\t\t( getQueryString( url ) || '' )\n\t\t\t// Normalize space encoding, accounting for PHP URL encoding\n\t\t\t// corresponding to `application/x-www-form-urlencoded`.\n\t\t\t//\n\t\t\t// See: https://tools.ietf.org/html/rfc1866#section-8.2.1\n\t\t\t.replace( /\\+/g, '%20' )\n\t\t\t.split( '&' )\n\t\t\t.reduce( ( accumulator, keyValue ) => {\n\t\t\t\tconst [ key, value = '' ] = keyValue\n\t\t\t\t\t.split( '=' )\n\t\t\t\t\t// Filtering avoids decoding as `undefined` for value, where\n\t\t\t\t\t// default is restored in destructuring assignment.\n\t\t\t\t\t.filter( Boolean )\n\t\t\t\t\t.map( safeDecodeURIComponent );\n\n\t\t\t\tif ( key ) {\n\t\t\t\t\tconst segments = key.replace( /\\]/g, '' ).split( '[' );\n\t\t\t\t\tsetPath( accumulator, segments, value );\n\t\t\t\t}\n\n\t\t\t\treturn accumulator;\n\t\t\t}, Object.create( null ) )\n\t);\n}\n","/**\n * Generates URL-encoded query string using input query data.\n *\n * It is intended to behave equivalent as PHP's `http_build_query`, configured\n * with encoding type PHP_QUERY_RFC3986 (spaces as `%20`).\n *\n * @example\n * ```js\n * const queryString = buildQueryString( {\n *    simple: 'is ok',\n *    arrays: [ 'are', 'fine', 'too' ],\n *    objects: {\n *       evenNested: {\n *          ok: 'yes',\n *       },\n *    },\n * } );\n * // \"simple=is%20ok&arrays%5B0%5D=are&arrays%5B1%5D=fine&arrays%5B2%5D=too&objects%5BevenNested%5D%5Bok%5D=yes\"\n * ```\n *\n * @param {Record<string,*>} data Data to encode.\n *\n * @return {string} Query string.\n */\nexport function buildQueryString( data ) {\n\tlet string = '';\n\n\tconst stack = Object.entries( data );\n\n\tlet pair;\n\twhile ( ( pair = stack.shift() ) ) {\n\t\tlet [ key, value ] = pair;\n\n\t\t// Support building deeply nested data, from array or object values.\n\t\tconst hasNestedData =\n\t\t\tArray.isArray( value ) || ( value && value.constructor === Object );\n\n\t\tif ( hasNestedData ) {\n\t\t\t// Push array or object values onto the stack as composed of their\n\t\t\t// original key and nested index or key, retaining order by a\n\t\t\t// combination of Array#reverse and Array#unshift onto the stack.\n\t\t\tconst valuePairs = Object.entries( value ).reverse();\n\t\t\tfor ( const [ member, memberValue ] of valuePairs ) {\n\t\t\t\tstack.unshift( [ `${ key }[${ member }]`, memberValue ] );\n\t\t\t}\n\t\t} else if ( value !== undefined ) {\n\t\t\t// Null is treated as special case, equivalent to empty string.\n\t\t\tif ( value === null ) {\n\t\t\t\tvalue = '';\n\t\t\t}\n\n\t\t\tstring +=\n\t\t\t\t'&' + [ key, value ].map( encodeURIComponent ).join( '=' );\n\t\t}\n\t}\n\n\t// Loop will concatenate with leading `&`, but it's only expected for all\n\t// but the first query parameter. This strips the leading `&`, while still\n\t// accounting for the case that the string may in-fact be empty.\n\treturn string.substr( 1 );\n}\n","/**\n * Internal dependencies\n */\nimport { getQueryArgs } from './get-query-args';\nimport { buildQueryString } from './build-query-string';\n\n/**\n * Appends arguments as querystring to the provided URL. If the URL already\n * includes query arguments, the arguments are merged with (and take precedent\n * over) the existing set.\n *\n * @param {string} [url=''] URL to which arguments should be appended. If omitted,\n *                          only the resulting querystring is returned.\n * @param {Object} [args]   Query arguments to apply to URL.\n *\n * @example\n * ```js\n * const newURL = addQueryArgs( 'https://google.com', { q: 'test' } ); // https://google.com/?q=test\n * ```\n *\n * @return {string} URL with arguments applied.\n */\nexport function addQueryArgs( url = '', args ) {\n\t// If no arguments are to be appended, return original URL.\n\tif ( ! args || ! Object.keys( args ).length ) {\n\t\treturn url;\n\t}\n\n\tlet baseUrl = url;\n\n\t// Determine whether URL already had query arguments.\n\tconst queryStringIndex = url.indexOf( '?' );\n\tif ( queryStringIndex !== -1 ) {\n\t\t// Merge into existing query arguments.\n\t\targs = Object.assign( getQueryArgs( url ), args );\n\n\t\t// Change working base URL to omit previous query arguments.\n\t\tbaseUrl = baseUrl.substr( 0, queryStringIndex );\n\t}\n\n\treturn baseUrl + '?' + buildQueryString( args );\n}\n","/**\n * Given a path, returns a normalized path where equal query parameter values\n * will be treated as identical, regardless of order they appear in the original\n * text.\n *\n * @param {string} path Original path.\n *\n * @return {string} Normalized path.\n */\nexport function normalizePath( path ) {\n\tconst splitted = path.split( '?' );\n\tconst query = splitted[ 1 ];\n\tconst base = splitted[ 0 ];\n\tif ( ! query ) {\n\t\treturn base;\n\t}\n\n\t// 'b=1%2C2&c=2&a=5'\n\treturn (\n\t\tbase +\n\t\t'?' +\n\t\tquery\n\t\t\t// [ 'b=1%2C2', 'c=2', 'a=5' ]\n\t\t\t.split( '&' )\n\t\t\t// [ [ 'b, '1%2C2' ], [ 'c', '2' ], [ 'a', '5' ] ]\n\t\t\t.map( ( entry ) => entry.split( '=' ) )\n\t\t\t// [ [ 'b', '1,2' ], [ 'c', '2' ], [ 'a', '5' ] ]\n\t\t\t.map( ( pair ) => pair.map( decodeURIComponent ) )\n\t\t\t// [ [ 'a', '5' ], [ 'b, '1,2' ], [ 'c', '2' ] ]\n\t\t\t.sort( ( a, b ) => a[ 0 ].localeCompare( b[ 0 ] ) )\n\t\t\t// [ [ 'a', '5' ], [ 'b, '1%2C2' ], [ 'c', '2' ] ]\n\t\t\t.map( ( pair ) => pair.map( encodeURIComponent ) )\n\t\t\t// [ 'a=5', 'b=1%2C2', 'c=2' ]\n\t\t\t.map( ( pair ) => pair.join( '=' ) )\n\t\t\t// 'a=5&b=1%2C2&c=2'\n\t\t\t.join( '&' )\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { addQueryArgs, getQueryArgs, normalizePath } from '@wordpress/url';\n\n/**\n * @param {Record<string, any>} preloadedData\n * @return {import('../types').APIFetchMiddleware} Preloading middleware.\n */\nfunction createPreloadingMiddleware( preloadedData ) {\n\tconst cache = Object.fromEntries(\n\t\tObject.entries( preloadedData ).map( ( [ path, data ] ) => [\n\t\t\tnormalizePath( path ),\n\t\t\tdata,\n\t\t] )\n\t);\n\n\treturn ( options, next ) => {\n\t\tconst { parse = true } = options;\n\t\t/** @type {string | void} */\n\t\tlet rawPath = options.path;\n\t\tif ( ! rawPath && options.url ) {\n\t\t\tconst { rest_route: pathFromQuery, ...queryArgs } = getQueryArgs(\n\t\t\t\toptions.url\n\t\t\t);\n\n\t\t\tif ( typeof pathFromQuery === 'string' ) {\n\t\t\t\trawPath = addQueryArgs( pathFromQuery, queryArgs );\n\t\t\t}\n\t\t}\n\n\t\tif ( typeof rawPath !== 'string' ) {\n\t\t\treturn next( options );\n\t\t}\n\n\t\tconst method = options.method || 'GET';\n\t\tconst path = normalizePath( rawPath );\n\n\t\tif ( 'GET' === method && cache[ path ] ) {\n\t\t\tconst cacheData = cache[ path ];\n\n\t\t\t// Unsetting the cache key ensures that the data is only used a single time.\n\t\t\tdelete cache[ path ];\n\n\t\t\treturn prepareResponse( cacheData, !! parse );\n\t\t} else if (\n\t\t\t'OPTIONS' === method &&\n\t\t\tcache[ method ] &&\n\t\t\tcache[ method ][ path ]\n\t\t) {\n\t\t\tconst cacheData = cache[ method ][ path ];\n\n\t\t\t// Unsetting the cache key ensures that the data is only used a single time.\n\t\t\tdelete cache[ method ][ path ];\n\n\t\t\treturn prepareResponse( cacheData, !! parse );\n\t\t}\n\n\t\treturn next( options );\n\t};\n}\n\n/**\n * This is a helper function that sends a success response.\n *\n * @param {Record<string, any>} responseData\n * @param {boolean}             parse\n * @return {Promise<any>} Promise with the response.\n */\nfunction prepareResponse( responseData, parse ) {\n\treturn Promise.resolve(\n\t\tparse\n\t\t\t? responseData.body\n\t\t\t: new window.Response( JSON.stringify( responseData.body ), {\n\t\t\t\t\tstatus: 200,\n\t\t\t\t\tstatusText: 'OK',\n\t\t\t\t\theaders: responseData.headers,\n\t\t\t  } )\n\t);\n}\n\nexport default createPreloadingMiddleware;\n","/**\n * WordPress dependencies\n */\nimport { addQueryArgs } from '@wordpress/url';\n\n/**\n * Internal dependencies\n */\nimport apiFetch from '..';\n\n/**\n * Apply query arguments to both URL and Path, whichever is present.\n *\n * @param {import('../types').APIFetchOptions} props\n * @param {Record<string, string | number>}    queryArgs\n * @return {import('../types').APIFetchOptions} The request with the modified query args\n */\nconst modifyQuery = ( { path, url, ...options }, queryArgs ) => ( {\n\t...options,\n\turl: url && addQueryArgs( url, queryArgs ),\n\tpath: path && addQueryArgs( path, queryArgs ),\n} );\n\n/**\n * Duplicates parsing functionality from apiFetch.\n *\n * @param {Response} response\n * @return {Promise<any>} Parsed response json.\n */\nconst parseResponse = ( response ) =>\n\tresponse.json ? response.json() : Promise.reject( response );\n\n/**\n * @param {string | null} linkHeader\n * @return {{ next?: string }} The parsed link header.\n */\nconst parseLinkHeader = ( linkHeader ) => {\n\tif ( ! linkHeader ) {\n\t\treturn {};\n\t}\n\tconst match = linkHeader.match( /<([^>]+)>; rel=\"next\"/ );\n\treturn match\n\t\t? {\n\t\t\t\tnext: match[ 1 ],\n\t\t  }\n\t\t: {};\n};\n\n/**\n * @param {Response} response\n * @return {string | undefined} The next page URL.\n */\nconst getNextPageUrl = ( response ) => {\n\tconst { next } = parseLinkHeader( response.headers.get( 'link' ) );\n\treturn next;\n};\n\n/**\n * @param {import('../types').APIFetchOptions} options\n * @return {boolean} True if the request contains an unbounded query.\n */\nconst requestContainsUnboundedQuery = ( options ) => {\n\tconst pathIsUnbounded =\n\t\t!! options.path && options.path.indexOf( 'per_page=-1' ) !== -1;\n\tconst urlIsUnbounded =\n\t\t!! options.url && options.url.indexOf( 'per_page=-1' ) !== -1;\n\treturn pathIsUnbounded || urlIsUnbounded;\n};\n\n/**\n * The REST API enforces an upper limit on the per_page option. To handle large\n * collections, apiFetch consumers can pass `per_page=-1`; this middleware will\n * then recursively assemble a full response array from all available pages.\n *\n * @type {import('../types').APIFetchMiddleware}\n */\nconst fetchAllMiddleware = async ( options, next ) => {\n\tif ( options.parse === false ) {\n\t\t// If a consumer has opted out of parsing, do not apply middleware.\n\t\treturn next( options );\n\t}\n\tif ( ! requestContainsUnboundedQuery( options ) ) {\n\t\t// If neither url nor path is requesting all items, do not apply middleware.\n\t\treturn next( options );\n\t}\n\n\t// Retrieve requested page of results.\n\tconst response = await apiFetch( {\n\t\t...modifyQuery( options, {\n\t\t\tper_page: 100,\n\t\t} ),\n\t\t// Ensure headers are returned for page 1.\n\t\tparse: false,\n\t} );\n\n\tconst results = await parseResponse( response );\n\n\tif ( ! Array.isArray( results ) ) {\n\t\t// We have no reliable way of merging non-array results.\n\t\treturn results;\n\t}\n\n\tlet nextPage = getNextPageUrl( response );\n\n\tif ( ! nextPage ) {\n\t\t// There are no further pages to request.\n\t\treturn results;\n\t}\n\n\t// Iteratively fetch all remaining pages until no \"next\" header is found.\n\tlet mergedResults = /** @type {any[]} */ ( [] ).concat( results );\n\twhile ( nextPage ) {\n\t\tconst nextResponse = await apiFetch( {\n\t\t\t...options,\n\t\t\t// Ensure the URL for the next page is used instead of any provided path.\n\t\t\tpath: undefined,\n\t\t\turl: nextPage,\n\t\t\t// Ensure we still get headers so we can identify the next page.\n\t\t\tparse: false,\n\t\t} );\n\t\tconst nextResults = await parseResponse( nextResponse );\n\t\tmergedResults = mergedResults.concat( nextResults );\n\t\tnextPage = getNextPageUrl( nextResponse );\n\t}\n\treturn mergedResults;\n};\n\nexport default fetchAllMiddleware;\n","/**\n * Set of HTTP methods which are eligible to be overridden.\n *\n * @type {Set<string>}\n */\nconst OVERRIDE_METHODS = new Set( [ 'PATCH', 'PUT', 'DELETE' ] );\n\n/**\n * Default request method.\n *\n * \"A request has an associated method (a method). Unless stated otherwise it\n * is `GET`.\"\n *\n * @see  https://fetch.spec.whatwg.org/#requests\n *\n * @type {string}\n */\nconst DEFAULT_METHOD = 'GET';\n\n/**\n * API Fetch middleware which overrides the request method for HTTP v1\n * compatibility leveraging the REST API X-HTTP-Method-Override header.\n *\n * @type {import('../types').APIFetchMiddleware}\n */\nconst httpV1Middleware = ( options, next ) => {\n\tconst { method = DEFAULT_METHOD } = options;\n\tif ( OVERRIDE_METHODS.has( method.toUpperCase() ) ) {\n\t\toptions = {\n\t\t\t...options,\n\t\t\theaders: {\n\t\t\t\t...options.headers,\n\t\t\t\t'X-HTTP-Method-Override': method,\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tmethod: 'POST',\n\t\t};\n\t}\n\n\treturn next( options );\n};\n\nexport default httpV1Middleware;\n","/**\n * Internal dependencies\n */\nimport { getQueryArgs } from './get-query-args';\n\n/**\n * @typedef {{[key: string]: QueryArgParsed}} QueryArgObject\n */\n\n/**\n * @typedef {string|string[]|QueryArgObject} QueryArgParsed\n */\n\n/**\n * Returns a single query argument of the url\n *\n * @param {string} url URL.\n * @param {string} arg Query arg name.\n *\n * @example\n * ```js\n * const foo = getQueryArg( 'https://wordpress.org?foo=bar&bar=baz', 'foo' ); // bar\n * ```\n *\n * @return {QueryArgParsed|void} Query arg value.\n */\nexport function getQueryArg( url, arg ) {\n\treturn getQueryArgs( url )[ arg ];\n}\n","/**\n * Internal dependencies\n */\nimport { getQueryArg } from './get-query-arg';\n\n/**\n * Determines whether the URL contains a given query arg.\n *\n * @param {string} url URL.\n * @param {string} arg Query arg name.\n *\n * @example\n * ```js\n * const hasBar = hasQueryArg( 'https://wordpress.org?foo=bar&bar=baz', 'bar' ); // true\n * ```\n *\n * @return {boolean} Whether or not the URL contains the query arg.\n */\nexport function hasQueryArg( url, arg ) {\n\treturn getQueryArg( url, arg ) !== undefined;\n}\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Parses the apiFetch response.\n *\n * @param {Response} response\n * @param {boolean}  shouldParseResponse\n *\n * @return {Promise<any> | null | Response} Parsed response.\n */\nconst parseResponse = ( response, shouldParseResponse = true ) => {\n\tif ( shouldParseResponse ) {\n\t\tif ( response.status === 204 ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn response.json ? response.json() : Promise.reject( response );\n\t}\n\n\treturn response;\n};\n\n/**\n * Calls the `json` function on the Response, throwing an error if the response\n * doesn't have a json function or if parsing the json itself fails.\n *\n * @param {Response} response\n * @return {Promise<any>} Parsed response.\n */\nconst parseJsonAndNormalizeError = ( response ) => {\n\tconst invalidJsonError = {\n\t\tcode: 'invalid_json',\n\t\tmessage: __( 'The response is not a valid JSON response.' ),\n\t};\n\n\tif ( ! response || ! response.json ) {\n\t\tthrow invalidJsonError;\n\t}\n\n\treturn response.json().catch( () => {\n\t\tthrow invalidJsonError;\n\t} );\n};\n\n/**\n * Parses the apiFetch response properly and normalize response errors.\n *\n * @param {Response} response\n * @param {boolean}  shouldParseResponse\n *\n * @return {Promise<any>} Parsed response.\n */\nexport const parseResponseAndNormalizeError = (\n\tresponse,\n\tshouldParseResponse = true\n) => {\n\treturn Promise.resolve(\n\t\tparseResponse( response, shouldParseResponse )\n\t).catch( ( res ) => parseAndThrowError( res, shouldParseResponse ) );\n};\n\n/**\n * Parses a response, throwing an error if parsing the response fails.\n *\n * @param {Response} response\n * @param {boolean}  shouldParseResponse\n * @return {Promise<any>} Parsed response.\n */\nexport function parseAndThrowError( response, shouldParseResponse = true ) {\n\tif ( ! shouldParseResponse ) {\n\t\tthrow response;\n\t}\n\n\treturn parseJsonAndNormalizeError( response ).then( ( error ) => {\n\t\tconst unknownError = {\n\t\t\tcode: 'unknown_error',\n\t\t\tmessage: __( 'An unknown error occurred.' ),\n\t\t};\n\n\t\tthrow error || unknownError;\n\t} );\n}\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport {\n\tparseAndThrowError,\n\tparseResponseAndNormalizeError,\n} from '../utils/response';\n\n/**\n * @param {import('../types').APIFetchOptions} options\n * @return {boolean} True if the request is for media upload.\n */\nfunction isMediaUploadRequest( options ) {\n\tconst isCreateMethod = !! options.method && options.method === 'POST';\n\tconst isMediaEndpoint =\n\t\t( !! options.path && options.path.indexOf( '/wp/v2/media' ) !== -1 ) ||\n\t\t( !! options.url && options.url.indexOf( '/wp/v2/media' ) !== -1 );\n\n\treturn isMediaEndpoint && isCreateMethod;\n}\n\n/**\n * Middleware handling media upload failures and retries.\n *\n * @type {import('../types').APIFetchMiddleware}\n */\nconst mediaUploadMiddleware = ( options, next ) => {\n\tif ( ! isMediaUploadRequest( options ) ) {\n\t\treturn next( options );\n\t}\n\n\tlet retries = 0;\n\tconst maxRetries = 5;\n\n\t/**\n\t * @param {string} attachmentId\n\t * @return {Promise<any>} Processed post response.\n\t */\n\tconst postProcess = ( attachmentId ) => {\n\t\tretries++;\n\t\treturn next( {\n\t\t\tpath: `/wp/v2/media/${ attachmentId }/post-process`,\n\t\t\tmethod: 'POST',\n\t\t\tdata: { action: 'create-image-subsizes' },\n\t\t\tparse: false,\n\t\t} ).catch( () => {\n\t\t\tif ( retries < maxRetries ) {\n\t\t\t\treturn postProcess( attachmentId );\n\t\t\t}\n\t\t\tnext( {\n\t\t\t\tpath: `/wp/v2/media/${ attachmentId }?force=true`,\n\t\t\t\tmethod: 'DELETE',\n\t\t\t} );\n\n\t\t\treturn Promise.reject();\n\t\t} );\n\t};\n\n\treturn next( { ...options, parse: false } )\n\t\t.catch( ( response ) => {\n\t\t\tconst attachmentId = response.headers.get(\n\t\t\t\t'x-wp-upload-attachment-id'\n\t\t\t);\n\t\t\tif (\n\t\t\t\tresponse.status >= 500 &&\n\t\t\t\tresponse.status < 600 &&\n\t\t\t\tattachmentId\n\t\t\t) {\n\t\t\t\treturn postProcess( attachmentId ).catch( () => {\n\t\t\t\t\tif ( options.parse !== false ) {\n\t\t\t\t\t\treturn Promise.reject( {\n\t\t\t\t\t\t\tcode: 'post_process',\n\t\t\t\t\t\t\tmessage: __(\n\t\t\t\t\t\t\t\t'Media upload failed. If this is a photo or a large image, please scale it down and try again.'\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Promise.reject( response );\n\t\t\t\t} );\n\t\t\t}\n\t\t\treturn parseAndThrowError( response, options.parse );\n\t\t} )\n\t\t.then( ( response ) =>\n\t\t\tparseResponseAndNormalizeError( response, options.parse )\n\t\t);\n};\n\nexport default mediaUploadMiddleware;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport createNonceMiddleware from './middlewares/nonce';\nimport createRootURLMiddleware from './middlewares/root-url';\nimport createPreloadingMiddleware from './middlewares/preloading';\nimport fetchAllMiddleware from './middlewares/fetch-all-middleware';\nimport namespaceEndpointMiddleware from './middlewares/namespace-endpoint';\nimport httpV1Middleware from './middlewares/http-v1';\nimport userLocaleMiddleware from './middlewares/user-locale';\nimport mediaUploadMiddleware from './middlewares/media-upload';\nimport {\n\tparseResponseAndNormalizeError,\n\tparseAndThrowError,\n} from './utils/response';\n\n/**\n * Default set of header values which should be sent with every request unless\n * explicitly provided through apiFetch options.\n *\n * @type {Record<string, string>}\n */\nconst DEFAULT_HEADERS = {\n\t// The backend uses the Accept header as a condition for considering an\n\t// incoming request as a REST request.\n\t//\n\t// See: https://core.trac.wordpress.org/ticket/44534\n\tAccept: 'application/json, */*;q=0.1',\n};\n\n/**\n * Default set of fetch option values which should be sent with every request\n * unless explicitly provided through apiFetch options.\n *\n * @type {Object}\n */\nconst DEFAULT_OPTIONS = {\n\tcredentials: 'include',\n};\n\n/** @typedef {import('./types').APIFetchMiddleware} APIFetchMiddleware */\n/** @typedef {import('./types').APIFetchOptions} APIFetchOptions */\n\n/**\n * @type {import('./types').APIFetchMiddleware[]}\n */\nconst middlewares = [\n\tuserLocaleMiddleware,\n\tnamespaceEndpointMiddleware,\n\thttpV1Middleware,\n\tfetchAllMiddleware,\n];\n\n/**\n * Register a middleware\n *\n * @param {import('./types').APIFetchMiddleware} middleware\n */\nfunction registerMiddleware( middleware ) {\n\tmiddlewares.unshift( middleware );\n}\n\n/**\n * Checks the status of a response, throwing the Response as an error if\n * it is outside the 200 range.\n *\n * @param {Response} response\n * @return {Response} The response if the status is in the 200 range.\n */\nconst checkStatus = ( response ) => {\n\tif ( response.status >= 200 && response.status < 300 ) {\n\t\treturn response;\n\t}\n\n\tthrow response;\n};\n\n/** @typedef {(options: import('./types').APIFetchOptions) => Promise<any>} FetchHandler*/\n\n/**\n * @type {FetchHandler}\n */\nconst defaultFetchHandler = ( nextOptions ) => {\n\tconst { url, path, data, parse = true, ...remainingOptions } = nextOptions;\n\tlet { body, headers } = nextOptions;\n\n\t// Merge explicitly-provided headers with default values.\n\theaders = { ...DEFAULT_HEADERS, ...headers };\n\n\t// The `data` property is a shorthand for sending a JSON body.\n\tif ( data ) {\n\t\tbody = JSON.stringify( data );\n\t\theaders[ 'Content-Type' ] = 'application/json';\n\t}\n\n\tconst responsePromise = window.fetch(\n\t\t// Fall back to explicitly passing `window.location` which is the behavior if `undefined` is passed.\n\t\turl || path || window.location.href,\n\t\t{\n\t\t\t...DEFAULT_OPTIONS,\n\t\t\t...remainingOptions,\n\t\t\tbody,\n\t\t\theaders,\n\t\t}\n\t);\n\n\treturn responsePromise.then(\n\t\t( value ) =>\n\t\t\tPromise.resolve( value )\n\t\t\t\t.then( checkStatus )\n\t\t\t\t.catch( ( response ) => parseAndThrowError( response, parse ) )\n\t\t\t\t.then( ( response ) =>\n\t\t\t\t\tparseResponseAndNormalizeError( response, parse )\n\t\t\t\t),\n\t\t( err ) => {\n\t\t\t// Re-throw AbortError for the users to handle it themselves.\n\t\t\tif ( err && err.name === 'AbortError' ) {\n\t\t\t\tthrow err;\n\t\t\t}\n\n\t\t\t// Otherwise, there is most likely no network connection.\n\t\t\t// Unfortunately the message might depend on the browser.\n\t\t\tthrow {\n\t\t\t\tcode: 'fetch_error',\n\t\t\t\tmessage: __( 'You are probably offline.' ),\n\t\t\t};\n\t\t}\n\t);\n};\n\n/** @type {FetchHandler} */\nlet fetchHandler = defaultFetchHandler;\n\n/**\n * Defines a custom fetch handler for making the requests that will override\n * the default one using window.fetch\n *\n * @param {FetchHandler} newFetchHandler The new fetch handler\n */\nfunction setFetchHandler( newFetchHandler ) {\n\tfetchHandler = newFetchHandler;\n}\n\n/**\n * @template T\n * @param {import('./types').APIFetchOptions} options\n * @return {Promise<T>} A promise representing the request processed via the registered middlewares.\n */\nfunction apiFetch( options ) {\n\t// creates a nested function chain that calls all middlewares and finally the `fetchHandler`,\n\t// converting `middlewares = [ m1, m2, m3 ]` into:\n\t// ```\n\t// opts1 => m1( opts1, opts2 => m2( opts2, opts3 => m3( opts3, fetchHandler ) ) );\n\t// ```\n\tconst enhancedHandler = middlewares.reduceRight(\n\t\t( /** @type {FetchHandler} */ next, middleware ) => {\n\t\t\treturn ( workingOptions ) => middleware( workingOptions, next );\n\t\t},\n\t\tfetchHandler\n\t);\n\n\treturn enhancedHandler( options ).catch( ( error ) => {\n\t\tif ( error.code !== 'rest_cookie_invalid_nonce' ) {\n\t\t\treturn Promise.reject( error );\n\t\t}\n\n\t\t// If the nonce is invalid, refresh it and try again.\n\t\treturn (\n\t\t\twindow\n\t\t\t\t// @ts-ignore\n\t\t\t\t.fetch( apiFetch.nonceEndpoint )\n\t\t\t\t.then( checkStatus )\n\t\t\t\t.then( ( data ) => data.text() )\n\t\t\t\t.then( ( text ) => {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tapiFetch.nonceMiddleware.nonce = text;\n\t\t\t\t\treturn apiFetch( options );\n\t\t\t\t} )\n\t\t);\n\t} );\n}\n\napiFetch.use = registerMiddleware;\napiFetch.setFetchHandler = setFetchHandler;\n\napiFetch.createNonceMiddleware = createNonceMiddleware;\napiFetch.createPreloadingMiddleware = createPreloadingMiddleware;\napiFetch.createRootURLMiddleware = createRootURLMiddleware;\napiFetch.fetchAllMiddleware = fetchAllMiddleware;\napiFetch.mediaUploadMiddleware = mediaUploadMiddleware;\n\nexport default apiFetch;\n","/**\n * WordPress dependencies\n */\nimport { addQueryArgs, hasQueryArg } from '@wordpress/url';\n\n/**\n * @type {import('../types').APIFetchMiddleware}\n */\nconst userLocaleMiddleware = ( options, next ) => {\n\tif (\n\t\ttypeof options.url === 'string' &&\n\t\t! hasQueryArg( options.url, '_locale' )\n\t) {\n\t\toptions.url = addQueryArgs( options.url, { _locale: 'user' } );\n\t}\n\n\tif (\n\t\ttypeof options.path === 'string' &&\n\t\t! hasQueryArg( options.path, '_locale' )\n\t) {\n\t\toptions.path = addQueryArgs( options.path, { _locale: 'user' } );\n\t}\n\n\treturn next( options );\n};\n\nexport default userLocaleMiddleware;\n","const { registerBlockType } = wp.blocks;\nconst { withSelect } = wp.data;\nimport apiFetch from '@wordpress/api-fetch';\n\nconst WundergroundPWSDataBlock = ( { options, station_id } ) => {\n    if ( options ) {\n        return (\n            <div>\n                <h4>Current weather conditions from <a href={`https://www.wunderground.com/dashboard/pws/${ station_id }`} target='_blank'>{ station_id }</a></h4>\n                <p><em>Last updated { options.obsTimeLocal }</em></p>\n                <p>{ ( 'Temperature:' ) } { options.temp }&deg;F</p>\n                <p>{ ( 'Humidity' ) } { options.humidity }%</p>\n                <p>{ ( 'UV Index' ) } { options.uv }</p>\n                <p>{ ( 'Heat Index:' ) } { options.heatIndex }&deg;F</p>\n                <p>{ ( 'Dew Point:' ) } { options.dewpt }&deg;F</p>\n                <p>{ ( 'Precipitation Rate:' ) } { options.precipRate } in/hr</p>\n                <p>{ ( 'Total Precipitation:' ) } { options.precipTotal } in</p>\n                <p>{ ( 'Wind Chill:' ) } { options.windChill }&deg;F</p>\n                <p>{ ( 'Wind Speed:' ) } { options.windSpeed } mph</p>\n                <p>{ ( 'Wind Gust:' ) } { options.windGust } mph</p>\n                <p>{ ( 'Pressure:' ) } { options.pressure } inHg</p>\n            </div>\n        );\n    } else {\n        return <p>{ 'Data is not available.' }</p>;\n    }\n};\n\nregisterBlockType( 'wu-pws-blocks/current-weather', {\n    title: 'Wunderground PWS Current Weather',\n    icon: 'cloud',\n    category: 'widgets',\n    edit: function( props ) {\n        const [ options, setOptions ] = React.useState( null );\n        const [ station_id, setStationId ] = React.useState( null );\n        \n        React.useEffect( () => {\n            apiFetch( { path: '/wp-json/wu-pws/v1/current' } ).then( ( data ) => {\n                setOptions( data );\n            });\n            \n            apiFetch( { path: '/wp-json/wu-pws/v1/station_id' } ).then( ( data ) => {\n                setStationId( data );\n            });\n        }, [] );\n        \n        return <WundergroundPWSDataBlock options={ options } station_id={ station_id } />;\n    },\n    save: () => {\n        return <WundergroundPWSDataBlock />;\n    },\n} );\n\n"],"names":["$030bd56297c4abb8$exports","fn","options","head","tail","size","memoized","args","i","node","len","arguments","length","searchCache","next","prev","val","Array","apply","maxSize","clear","$c665d93b2532c65d$export$63151d8bb18a49f9","$c665d93b2532c65d$export$790fb69b1a2884f9","re","not_string","not_bool","not_type","not_primitive","number","numeric_arg","json","not_json","text","modulo","placeholder","key","key_access","index_access","sign","sprintf","parse_tree","argv","arg","k","ph","pad","pad_character","pad_length","is_positive","cursor","tree_length","output","keys","undefined","Error","param_no","test","type","Function","isNaN","TypeError","parseInt","toString","String","fromCharCode","JSON","stringify","width","precision","parseFloat","toExponential","toFixed","Number","toPrecision","substring","Object","prototype","call","slice","toLowerCase","valueOf","toUpperCase","replace","pad_char","charAt","repeat","align","sprintf_format","fmt","sprintf_cache","match","_fmt","arg_names","exec","push","SyntaxError","field_list","replacement_field","field_match","sprintf_parse","vsprintf","concat","create","window","define","memoize","console","error","$0f4d45ff44486fdb$var$PRECEDENCE","$0f4d45ff44486fdb$var$OPENERS","$0f4d45ff44486fdb$var$TERMINATORS","$0f4d45ff44486fdb$var$PATTERN","$0f4d45ff44486fdb$export$2e2bcd8739ae039","expression","operator","term","element","terms","stack","substr","index","trim","pop","indexOf","reverse","$94eef1b2d5e65686$var$OPERATORS","a","b","c","$94eef1b2d5e65686$export$2e2bcd8739ae039","postfix","variables","j","getOperatorResult","value","earlyReturn","hasOwnProperty","$00d0953cc7be59d8$export$2e2bcd8739ae039","$05530cac947ad0da$var$DEFAULT_OPTIONS","contextDelimiter","onMissingKey","$05530cac947ad0da$export$2e2bcd8739ae039","data","this","pluralForms","getPluralForm","domain","n","config","plural","pf","evaluate","plural_forms","parts","part","split","$05530cac947ad0da$var$getPluralExpression","dcnpgettext","context","singular","entry","DEFAULT_LOCALE_DATA","I18N_HOOK_REGEXP","$5a069099b4672102$export$2e2bcd8739ae039","namespace","$a478171861c8c86e$export$2e2bcd8739ae039","hookName","$fd035fa4006b395f$export$2e2bcd8739ae039","hooks","storeKey","callback","priority","hooksStore","validateHookName","validateNamespace","handler","handlers","splice","__current","forEach","hookInfo","name","currentIndex","runs","doAction","$991de1ff8f7500c1$export$2e2bcd8739ae039","removeAll","handlersRemoved","$797ba1df0a5d77ab$export$2e2bcd8739ae039","some","hook","$2d8581afdd65ecf6$export$2e2bcd8739ae039","returnFirstArg","_len","_key","result","$9c6275b0851c63c2$export$2e2bcd8739ae039","_hooksStore$__current","_hooksStore$__current2","$c7417ed2fa92e6d4$export$2e2bcd8739ae039","$88ef48e984585ad1$export$2e2bcd8739ae039","_Hooks","constructor","actions","filters","addAction","createAddHook","addFilter","removeAction","createRemoveHook","removeFilter","hasAction","createHasHook","hasFilter","removeAllActions","removeAllFilters","createRunHook","applyFilters","currentAction","createCurrentHook","currentFilter","doingAction","createDoingHook","doingFilter","didAction","createDidHook","didFilter","defaultHooks","i18n","initialData","initialDomain","tannin","Tannin","listeners","Set","notifyListeners","listener","doSetLocaleData","_tannin$data$domain","setLocaleData","single","getFilterDomain","_x","translation","onHookAddedOrRemoved","_tannin$data$domain2","add","delete","_tannin$data","_tannin$data2","createI18n","getLocaleData","bind","resetLocaleData","subscribe","__","_n","_nx","isRTL","hasTranslation","$85ae7663aef2049b$export$2e2bcd8739ae039","nonce","middleware","headers","headerName","$bec9b89c9331f7ff$export$2e2bcd8739ae039","namespaceTrimmed","endpointTrimmed","path","endpoint","$d35e5f82ef5d84af$export$2e2bcd8739ae039","rootURL","namespaceAndEndpointMiddleware","optionsWithPath","apiRoot","url","safeDecodeURIComponent","uriComponent","decodeURIComponent","uriComponentError","getQueryString","query","URL","search","getQueryArgs","reduce","accumulator","keyValue","filter","Boolean","map","object","lastIndex","isArray","includes","isNextKeyArrayIndex","setPath","buildQueryString","string","entries","pair","shift","valuePairs","member","memberValue","unshift","encodeURIComponent","join","addQueryArgs","baseUrl","queryStringIndex","assign","normalizePath","splitted","base","sort","localeCompare","prepareResponse","responseData","parse","Promise","resolve","body","Response","status","statusText","$07b272b40839f326$export$2e2bcd8739ae039","preloadedData","cache","fromEntries","_ref","rawPath","rest_route","pathFromQuery","queryArgs","method","cacheData","modifyQuery","parseResponse","response","reject","getNextPageUrl","linkHeader","parseLinkHeader","get","$40b6acca4175a367$export$2e2bcd8739ae039","async","pathIsUnbounded","urlIsUnbounded","requestContainsUnboundedQuery","apiFetch","per_page","results","nextPage","mergedResults","nextResponse","nextResults","OVERRIDE_METHODS","DEFAULT_METHOD","getQueryArg","hasQueryArg","parseJsonAndNormalizeError","invalidJsonError","code","message","catch","parseResponseAndNormalizeError","shouldParseResponse","res","parseAndThrowError","then","unknownError","$82f43863bb08939d$export$2e2bcd8739ae039","isCreateMethod","isMediaUploadRequest","retries","postProcess","attachmentId","action","DEFAULT_HEADERS","Accept","DEFAULT_OPTIONS","credentials","middlewares","_locale","namespaceEndpointMiddleware","has","fetchAllMiddleware","checkStatus","fetchHandler","nextOptions","remainingOptions","fetch","location","href","err","reduceRight","workingOptions","enhancedHandler","nonceEndpoint","nonceMiddleware","use","setFetchHandler","newFetchHandler","createNonceMiddleware","createPreloadingMiddleware","createRootURLMiddleware","mediaUploadMiddleware","$108caffcf10b68a0$export$2e2bcd8739ae039","registerBlockType","$fce79f754ec1ce6a$var$registerBlockType","wp","blocks","withSelect","$fce79f754ec1ce6a$var$withSelect","$fce79f754ec1ce6a$var$WundergroundPWSDataBlock","station_id","React","createElement","target","obsTimeLocal","temp","humidity","uv","heatIndex","dewpt","precipRate","precipTotal","windChill","windSpeed","windGust","pressure","title","icon","category","edit","props","setOptions","useState","setStationId","useEffect","save"],"version":3,"file":"current-weather.js.map"}